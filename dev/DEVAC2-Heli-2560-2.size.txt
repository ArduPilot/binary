00000001 b in_failsafe
00000001 b nav_updates
00000001 b CH7_toy_flag
00000001 b CH7_wp_index
00000001 b control_mode
00000001 b gps_fix_count
00000001 b receiver_rssi
00000001 b throttle_mode
00000001 b mavlink_active
00000001 b prev_nav_index
00000001 b wp_verify_byte
00000001 b alt_change_flag
00000001 b gcs_out_of_time
00000001 b pid_log_counter
00000001 b roll_pitch_mode
00000001 d failsafe_enabled
00000001 b in_mavlink_delay
00000001 b slow_loopCounter
00000001 b sonar_alt_health
00000001 b auto_trim_counter
00000001 b oldSwitchPosition
00000001 b command_cond_index
00000001 b medium_loopCounter
00000001 b rate_targets_frame
00000001 b copter_leds_nav_blink
00000001 b auto_disarming_counter
00000001 b throttle_accel_controller_active
00000001 b event_id
00000001 b flip_dir
00000001 b led_mode
00000001 b nav_mode
00000001 b yaw_mode
00000001 b ap_system
00000001 b rtl_state
00000001 b yaw_timer
00000001 b update_simple_mode()::simple_counter
00000001 d update_GPS()::ground_start_count
00000001 b read_battery()::low_battery_counter
00000001 b read_inertia()::log_counter_inav
00000001 b dancing_light()::step
00000001 b init_arm_motors()::did_ground_start
00000001 b read_control_switch()::switch_counter
00000001 b update_optical_flow()::of_log_counter
00000001 b set_throttle_and_failsafe(unsigned int)::failsafe_counter
00000001 d do_jump()::jump
00000001 B flip_state
00000001 B flip_timer
00000001 B lim_old_state
00000001 B lim_state
00000001 B param_loader
00000001 B relay
00000002 T userhook_50Hz()
00000002 T userhook_init()
00000002 b climb_rate
00000002 b loiter_sum
00000002 b sonar_rate
00000002 b angle_boost
00000002 b event_delay
00000002 b event_value
00000002 b control_roll
00000002 b event_repeat
00000002 b loiter_total
00000002 b nav_throttle
00000002 b x_rate_error
00000002 b y_rate_error
00000002 b control_pitch
00000002 b land_detector
00000002 b max_speed_old
00000002 b mainLoop_count
00000002 b loiter_time_max
00000002 b crosstrack_error
00000002 b event_undo_value
00000002 b command_nav_index
00000002 b desired_climb_rate
00000002 b saved_toy_throttle
00000002 t barometer_accumulate()
00000002 b superslow_loopCounter
00000002 b throttle_accel_target_ef
00000002 b yaw_look_at_heading_slew
00000002 b failsafe_last_mainLoop_count
00000002 b ap
00000002 b g_gps
00000002 b nav_lat
00000002 b nav_lon
00000002 b baro_rate
00000002 b lat_speed
00000002 b lon_speed
00000002 b sonar_alt
00000002 W AP_Baro::accumulate()
00000002 r print_latlon(AP_HAL::BetterStream*, long)::__c
00000002 b arm_motors()::arming_counter
00000002 r setup_frame(unsigned char, Menu::arg const*)::__c
00000002 r setup_frame(unsigned char, Menu::arg const*)::__c
00000002 r setup_frame(unsigned char, Menu::arg const*)::__c
00000002 r setup_frame(unsigned char, Menu::arg const*)::__c
00000002 r print_divider()::__c
00000002 r test_wp(unsigned char, Menu::arg const*)::__c
00000002 r test_gps(unsigned char, Menu::arg const*)::__c
00000002 B batt_curr_analog_source
00000002 B batt_volt_analog_source
00000002 B board_vcc_analog_source
00000002 B cliSerial
00000002 R hal
00000002 B perf_info_long_running
00000002 B perf_info_loop_count
00000002 B rssi_analog_source
00000002 B sonar
00000002 B sonar_analog_source
00000002 B xLeadFilter
00000002 B yLeadFilter
00000003 r setup_gyro(unsigned char, Menu::arg const*)::__c
00000003 r select_logs(unsigned char, Menu::arg const*)::__c
00000003 r setup_sonar(unsigned char, Menu::arg const*)::__c
00000003 r Log_Read_GPS()::__c
00000003 r print_enabled(bool)::__c
00000003 r setup_compass(unsigned char, Menu::arg const*)::__c
00000003 r setup_optflow(unsigned char, Menu::arg const*)::__c
00000003 r Log_Read_Error()::__c
00000003 r Log_Read_Error()::__c
00000003 r Log_Read_Error()::__c
00000003 r Log_Read_Camera()::__c
00000004 b auto_pitch
00000004 d cos_roll_x
00000004 b long_error
00000004 b wp_bearing
00000004 d cos_pitch_x
00000004 b event_timer
00000004 b loiter_time
00000004 d scaleLongUp
00000004 b circle_angle
00000004 b home_bearing
00000004 b throttle_avg
00000004 b current_amps1
00000004 b home_distance
00000004 b last_gps_time
00000004 d scaleLongDown
00000004 b altitude_error
00000004 b current_total1
00000004 b fast_loopTimer
00000004 b old_wp_bearing
00000004 b condition_start
00000004 b condition_value
00000004 d battery_voltage1
00000004 b yaw_rate_target_bf
00000004 b yaw_rate_target_ef
00000004 b original_wp_bearing
00000004 b roll_rate_target_bf
00000004 b roll_rate_target_ef
00000004 b throttle_integrator
00000004 b yaw_look_at_heading
00000004 b pitch_rate_target_bf
00000004 b pitch_rate_target_ef
00000004 r __menu_name__log_menu
00000004 b rtl_loiter_start_time
00000004 b controller_desired_alt
00000004 b initial_simple_bearing
00000004 b yaw_look_at_WP_bearing
00000004 b failsafe_last_timestamp
00000004 b loiter_lat_from_home_cm
00000004 b loiter_lon_from_home_cm
00000004 d G_Dt
00000004 b dTnav
00000004 d cos_yaw
00000004 b nav_yaw
00000004 b of_roll
00000004 d sin_yaw
00000004 b baro_alt
00000004 b nav_roll
00000004 b of_pitch
00000004 d sin_roll
00000004 b auto_roll
00000004 d cos_yaw_x
00000004 b lat_error
00000004 b nav_pitch
00000004 d sin_pitch
00000004 d sin_yaw_y
00000004 b update_simple_mode()::simple_cos_x
00000004 b update_simple_mode()::simple_sin_y
00000004 b read_radio()::last_update
00000004 r setup_gyro(unsigned char, Menu::arg const*)::__c
00000004 b get_of_roll(long)::last_of_roll_update
00000004 b get_of_roll(long)::tot_x_cm
00000004 r select_logs(unsigned char, Menu::arg const*)::__c
00000004 r select_logs(unsigned char, Menu::arg const*)::__c
00000004 r select_logs(unsigned char, Menu::arg const*)::__c
00000004 r select_logs(unsigned char, Menu::arg const*)::__c
00000004 r select_logs(unsigned char, Menu::arg const*)::__c
00000004 r setup_sonar(unsigned char, Menu::arg const*)::__c
00000004 b get_of_pitch(long)::last_of_pitch_update
00000004 b get_of_pitch(long)::tot_y_cm
00000004 r print_switch(unsigned char, unsigned char, bool)::__c
00000004 r print_enabled(bool)::__c
00000004 r setup_compass(unsigned char, Menu::arg const*)::__c
00000004 r setup_optflow(unsigned char, Menu::arg const*)::__c
00000004 r Log_Read_Error()::__c
00000004 r print_log_menu()::__c
00000004 b get_loiter_accel(int, int)::accel_right
00000004 b get_loiter_accel(int, int)::z_accel_meas
00000004 b get_loiter_accel(int, int)::accel_forward
00000004 b mavlink_delay_cb()::last_5s
00000004 b mavlink_delay_cb()::last_1hz
00000004 b mavlink_delay_cb()::last_50hz
00000004 b get_throttle_rate(int)::last_call_ms
00000004 b get_throttle_rate(int)::z_rate_error
00000004 r print_flight_mode(unsigned char)::__c
00000004 r print_flight_mode(unsigned char)::__c
00000004 b update_navigation()::nav_last_update
00000004 b update_navigation()::nav_last_gps_time
00000004 b get_throttle_accel(int)::last_call_ms
00000004 b get_throttle_accel(int)::z_accel_error
00000004 r setup_batt_monitor(unsigned char, Menu::arg const*)::__c
00000004 b update_optical_flow()::last_of_update
00000004 b get_loiter_pos_lat_lon(long, long, float)::dist_error_lat
00000004 b get_loiter_pos_lat_lon(long, long, float)::dist_error_lon
00000004 b get_loiter_vel_lat_lon(int, int, float)::speed_error_lat
00000004 b get_loiter_vel_lat_lon(int, int, float)::speed_error_lon
00000004 b calc_velocity_and_position()::last_gps_latitude
00000004 b calc_velocity_and_position()::last_gps_longitude
00000004 b get_throttle_surface_tracking(int)::last_call_ms
00000004 b get_throttle_surface_tracking(int)::target_sonar_alt
00000004 r dump_log(unsigned char, Menu::arg const*)::__c
00000004 B float_int
00000004 B perf_info_max_time
00000004 B pitch_axis
00000004 B roll_axis
00000004 B tuning_value
00000004 B wp_distance
00000005 r __menu_name__test_menu
00000005 r report_ins()::__c
00000005 r select_logs(unsigned char, Menu::arg const*)::__c
00000005 r select_logs(unsigned char, Menu::arg const*)::__c
00000005 r select_logs(unsigned char, Menu::arg const*)::__c
00000005 r select_logs(unsigned char, Menu::arg const*)::__c
00000005 r print_switch(unsigned char, unsigned char, bool)::__c
00000005 r Log_Read_Mode()::__c
00000005 r Log_Read_Error()::__c
00000005 r print_log_menu()::__c
00000005 r print_log_menu()::__c
00000005 r print_log_menu()::__c
00000005 r print_log_menu()::__c
00000005 r print_log_menu()::__c
00000005 r print_flight_mode(unsigned char)::__c
00000005 r print_flight_mode(unsigned char)::__c
00000005 r print_flight_mode(unsigned char)::__c
00000005 r dump_log(unsigned char, Menu::arg const*)::__c
00000005 r test_ins(unsigned char, Menu::arg const*)::__c
00000006 T failsafe_disable()
00000006 T throttle_accel_deactivate()
00000006 t send_limits_status(mavlink_channel_t)
00000006 r __menu_name__setup_menu
00000006 W LowPassFilter<float>::reset()
00000006 W AP_Buffer<float, (unsigned char)15>::num_items()
00000006 W AP_Buffer<float, (unsigned char)5>::num_items()
00000006 r report_heli()::__c
00000006 r select_logs(unsigned char, Menu::arg const*)::__c
00000006 r test_eedump(unsigned char, Menu::arg const*)::__c
00000006 r test_eedump(unsigned char, Menu::arg const*)::__c
00000006 r zero_eeprom()::__c
00000006 r Log_Read_Mode()::__c
00000006 r Log_Read_Error()::__c
00000006 r Log_Read_Error()::__c
00000006 r Log_Read_Error()::__c
00000006 r print_log_menu()::__c
00000006 r print_log_menu()::__c
00000006 r print_log_menu()::__c
00000006 r load_parameters()::__c
00000006 r print_flight_mode(unsigned char)::__c
00000006 r print_flight_mode(unsigned char)::__c
00000006 r report_batt_monitor()::__c
00000006 r test_gps(unsigned char, Menu::arg const*)::__c
00000007 b setup_menu
00000007 b log_menu
00000007 b main_menu
00000007 b test_menu
00000007 r report_gyro()::__c
00000007 r select_logs(unsigned char, Menu::arg const*)::__c
00000007 r select_logs(unsigned char, Menu::arg const*)::__c
00000007 r select_logs(unsigned char, Menu::arg const*)::__c
00000007 r report_frame()::__c
00000007 r report_radio()::__c
00000007 r report_sonar()::__c
00000007 r print_enabled(bool)::__c
00000007 r print_log_menu()::__c
00000007 r print_flight_mode(unsigned char)::__c
00000007 r print_flight_mode(unsigned char)::__c
00000007 r print_flight_mode(unsigned char)::__c
00000007 r test_wp(unsigned char, Menu::arg const*)::__c
00000007 r Log_Read(int, int)::__c
00000007 r test_gps(unsigned char, Menu::arg const*)::__c
00000008 t reboot_board(unsigned char, Menu::arg const*)
00000008 W AP_Buffer<float, (unsigned char)15>::clear()
00000008 W AP_Buffer<float, (unsigned char)5>::clear()
00000008 V vtable for Filter<float>
00000008 r print_done()::__c
00000008 r select_logs(unsigned char, Menu::arg const*)::__c
00000008 r select_logs(unsigned char, Menu::arg const*)::__c
00000008 r report_tuning()::__c
00000008 r Log_Read_Event()::__c
00000008 r Log_Read_Iterm()::__c
00000008 r print_log_menu()::__c
00000008 r print_log_menu()::__c
00000008 r test_wp(unsigned char, Menu::arg const*)::__c
00000009 r report_optflow()::__c
00000009 r limits_loop()::__c
00000009 r report_gyro()::__c
00000009 r print_switch(unsigned char, unsigned char, bool)::__c
00000009 r print_log_menu()::__c
00000009 r print_log_menu()::__c
00000009 r report_compass()::__c
00000009 r print_flight_mode(unsigned char)::__c
00000009 r print_flight_mode(unsigned char)::__c
0000000a T perf_info_get_num_loops()
0000000a T perf_info_get_num_long_running()
0000000a T piezo_on()
0000000a T piezo_off()
0000000a t gcs_send_deferred()
0000000a t gcs_send_heartbeat()
0000000a W AP_ParamT<signed char, (ap_var_type)1>::set_and_save(signed char)
0000000a V vtable for ModeFilter<int, (unsigned char)3>
0000000a V vtable for AverageFilter<long, float, (unsigned char)5>
0000000a V vtable for FilterWithBuffer<float, (unsigned char)7>
0000000a V vtable for FilterWithBuffer<int, (unsigned char)3>
0000000a V vtable for FilterWithBuffer<long, (unsigned char)5>
0000000a r print_latlon(AP_HAL::BetterStream*, long)::__c
0000000a r test_relay(unsigned char, Menu::arg const*)::__c
0000000a r limits_loop()::__c
0000000a r limits_loop()::__c
0000000a r test_battery(unsigned char, Menu::arg const*)::__c
0000000a r test_optflow(unsigned char, Menu::arg const*)::__c
0000000a r print_log_menu()::__c
0000000a r Log_Read_Startup()::__c
0000000a r print_flight_mode(unsigned char)::__c
0000000a r print_flight_mode(unsigned char)::__c
0000000a r test_wp(unsigned char, Menu::arg const*)::__c
0000000a r test_mag(unsigned char, Menu::arg const*)::__c
0000000a B camera
0000000b r CSWTCH.1503
0000000b r test_relay(unsigned char, Menu::arg const*)::__c
0000000b r test_wp_nav(unsigned char, Menu::arg const*)::__c
0000000b r print_log_menu()::__c
0000000b B gpslock_limit
0000000b B rate_pitch_filter
0000000b B rate_roll_filter
0000000b B sonar_mode_filter
0000000c t process_logs(unsigned char, Menu::arg const*)
0000000c b omega
0000000c t test_mode(unsigned char, Menu::arg const*)
0000000c T GCS_MAVLINK::send_message(ap_message)
0000000c W AP_ParamT<int, (ap_var_type)2>::set_and_save(int)
0000000c r print_switch(unsigned char, unsigned char, bool)::__c
0000000c r report_frame()::__c
0000000c r test_optflow(unsigned char, Menu::arg const*)::__c
0000000c r setup_factory(unsigned char, Menu::arg const*)::__c
0000000c r report_version()::__c
0000000c r report_batt_monitor()::__c
0000000c r test_mag(unsigned char, Menu::arg const*)::__c
0000000d r select_logs(unsigned char, Menu::arg const*)::__c
0000000d r setup_frame(unsigned char, Menu::arg const*)::__c
0000000d r test_tuning(unsigned char, Menu::arg const*)::__c
0000000d r init_ardupilot()::__c
0000000d r startup_ground()::__c
0000000d r low_battery_event()::__c
0000000d r dump_log(unsigned char, Menu::arg const*)::__c
0000000e T set_low_battery(bool)
0000000e t _Z16set_throttle_outib.part.11
0000000e t send_statustext(mavlink_channel_t)
0000000e W DataFlash_Class::ReadPacket(void*, unsigned int)
0000000e V vtable for LowPassFilter<float>
0000000e V vtable for DerivativeFilter<float, (unsigned char)7>
0000000e V vtable for AP_Buffer<float, (unsigned char)15>
0000000e V vtable for AP_Buffer<float, (unsigned char)5>
0000000e r setup_heli(unsigned char, Menu::arg const*)::__c
0000000e r setup_mode(unsigned char, Menu::arg const*)::__c
0000000e r test_sonar(unsigned char, Menu::arg const*)::__c
0000000e r select_logs(unsigned char, Menu::arg const*)::__c
0000000e r do_erase_logs()::__c
0000000e r setup_compass(unsigned char, Menu::arg const*)::__c
0000000e r print_log_menu()::__c
0000000e r Log_Read_Camera()::__c
0000000e r Log_Read_Int16t()::__c
0000000e r Log_Read_UInt16t()::__c
0000000e r print_radio_values()::__c
0000000e r print_radio_values()::__c
0000000e r print_radio_values()::__c
0000000e r print_radio_values()::__c
0000000e r print_radio_values()::__c
0000000e r print_radio_values()::__c
0000000e r print_radio_values()::__c
0000000e r setup_batt_monitor(unsigned char, Menu::arg const*)::__c
0000000e r report_batt_monitor()::__c
0000000e r report_flight_modes()::__c
0000000e r test_wp(unsigned char, Menu::arg const*)::__c
0000000e B scheduler
0000000f b current_loc
0000000f b yaw_look_at_WP
0000000f b command_nav_queue
0000000f b command_cond_queue
0000000f b home
0000000f b next_WP
0000000f b prev_WP
0000000f b circle_WP
0000000f b guided_WP
0000000f r report_heli()::__c
0000000f r setup_radio(unsigned char, Menu::arg const*)::__c
0000000f r Log_Read_GPS()::__c
0000000f r setup_optflow(unsigned char, Menu::arg const*)::__c
0000000f r init_ardupilot()::__c
0000000f r print_log_menu()::__c
0000000f r print_log_menu()::__c
0000000f r Log_Read_Int32t()::__c
0000000f r Log_Read_UInt32t()::__c
00000010 W LowPassFilter<float>::reset(float)
00000010 r test_sonar(unsigned char, Menu::arg const*)::__c
00000010 r report_heli()::__c
00000010 r report_compass()::__c
00000010 r dump_log(unsigned char, Menu::arg const*)::__c
00000010 r GCS_MAVLINK::handleMessage(__mavlink_message*)::__c
00000010 r GCS_MAVLINK::handleMessage(__mavlink_message*)::__c
00000011 r setup_heli(unsigned char, Menu::arg const*)::__c
00000011 r perf_update()::__c
00000011 r zero_eeprom()::__c
00000011 r Log_Read_Float()::__c
00000012 T output_min()
00000012 T perf_info_get_max_time()
00000012 t erase_logs(unsigned char, Menu::arg const*)
00000012 t compass_accumulate()
00000012 W AverageFilter<long, float, (unsigned char)5>::reset()
00000012 W FilterWithBuffer<int, (unsigned char)3>::reset()
00000012 V vtable for AP_Baro
00000012 r setup_heli(unsigned char, Menu::arg const*)::__c
00000012 r select_logs(unsigned char, Menu::arg const*)::__c
00000013 r setup_heli(unsigned char, Menu::arg const*)::__c
00000013 r setup_heli(unsigned char, Menu::arg const*)::__c
00000013 r setup_heli(unsigned char, Menu::arg const*)::__c
00000013 r limits_loop()::__c
00000013 r report_heli()::__c
00000013 r report_heli()::__c
00000013 r report_heli()::__c
00000013 r report_heli()::__c
00000013 r report_heli()::__c
00000013 r init_compass()::__c
00000013 r Log_Read_Camera()::__c
00000013 r setup_accel_scale(unsigned char, Menu::arg const*)::__c
00000013 r GCS_MAVLINK::handleMessage(__mavlink_message*)::__c
00000013 B altitude_limit
00000014 t setup_tune(unsigned char, Menu::arg const*)
00000014 r __menu_name__main_menu
00000014 T GCS_MAVLINK::GCS_MAVLINK()
00000014 T GCS_MAVLINK::GCS_MAVLINK()
00000014 W FilterWithBuffer<int, (unsigned char)3>::get_sample(unsigned char)
00000014 r setup_gyro(unsigned char, Menu::arg const*)::__c
00000014 r setup_heli(unsigned char, Menu::arg const*)::__c
00000014 r setup_heli(unsigned char, Menu::arg const*)::__c
00000014 r limits_loop()::__c
00000014 r setup_sonar(unsigned char, Menu::arg const*)::__c
00000014 r do_erase_logs()::__c
00000014 r verify_nav_wp()::__c
00000014 r mavlink_delay_cb()::__c
00000015 r load_parameters()::__c
00000015 r print_hit_enter()::__c
00000015 r GCS_MAVLINK::handleMessage(__mavlink_message*)::__c
00000016 t _GLOBAL__sub_D_cliSerial
00000016 T piezo_beep()
00000016 W RC_Channel::RC_Channel(unsigned char)
00000016 W RC_Channel::RC_Channel(unsigned char)
00000016 r setup_heli(unsigned char, Menu::arg const*)::__c
00000016 r setup_mode(unsigned char, Menu::arg const*)::__c
00000016 r limits_loop()::__c
00000016 r init_ap_limits()::__c
00000016 r init_ardupilot()::__c
00000018 T micros()
00000018 T millis()
00000018 t reboot_apm()
00000018 r test_gps(unsigned char, Menu::arg const*)::__c
00000018 r GCS_MAVLINK::handleMessage(__mavlink_message*)::__c
00000018 B baro_filter
00000019 r init_optflow()::__c
00000019 r Log_Read_Motors()::__c
0000001a T flash_leds(bool)
0000001a T mavlink_delay(unsigned long)
0000001a T delay(unsigned long)
0000001a t do_erase_logs()
0000001a t gcs_check_input()
0000001a t reset_throttle_I()
0000001a t gcs_data_stream_send()
0000001a W RC_Channel_aux::RC_Channel_aux(unsigned char)
0000001a W RC_Channel_aux::RC_Channel_aux(unsigned char)
0000001a r Log_Read_GPS()::__c
0000001a r test_logging(unsigned char, Menu::arg const*)::__c
0000001b B DataFlash
0000001b r setup_heli(unsigned char, Menu::arg const*)::__c
0000001b r report_heli()::__c
0000001b r test_logging(unsigned char, Menu::arg const*)::__c
0000001b r GCS_MAVLINK::handleMessage(__mavlink_message*)::__c
0000001c T digitalRead(unsigned char)
0000001c T digitalReadFast(unsigned char)
0000001c T failsafe_enable()
0000001c T set_throttle_out(int, bool)
0000001c t do_land()
0000001c W FilterWithBuffer<long, (unsigned char)5>::get_sample(unsigned char)
0000001c r limits_loop()::__c
0000001c r limits_loop()::__c
0000001c r test_logging(unsigned char, Menu::arg const*)::__c
0000001c r report_tuning()::__c
0000001c r print_gyro_offsets()::__c
0000001d r Log_Read_DMP()::__c
0000001d r report_compass()::__c
0000001d r Log_Read_Performance()::__c
0000001e T digitalWrite(unsigned char, unsigned char)
0000001e T board_voltage()
0000001e T digitalWriteFast(unsigned char, unsigned char)
0000001e T pinMode(unsigned char, unsigned char)
0000001e t init_barometer()
0000001e r report_heli()::__c
0000001f r limits_loop()::__c
0000001f r limits_loop()::__c
0000001f r test_battery(unsigned char, Menu::arg const*)::__c
0000001f r init_barometer()::__c
0000001f r print_log_menu()::__c
0000001f r test_mag(unsigned char, Menu::arg const*)::__c
00000020 T set_home_is_set(bool)
00000020 t init_sonar()
00000020 r set_throttle_mode(unsigned char)::__c
00000020 r arm_motors()::__c
00000020 r limits_loop()::__c
00000020 r limits_loop()::__c
00000021 r setup_heli(unsigned char, Menu::arg const*)::__c
00000021 r setup_mode(unsigned char, Menu::arg const*)::__c
00000021 r limits_loop()::__c
00000021 r limits_loop()::__c
00000021 r Log_Read_Attitude()::__c
00000022 T set_auto_armed(bool)
00000022 T perf_info_reset()
00000022 t setup_declination(unsigned char, Menu::arg const*)
00000022 r arm_motors()::__c
00000022 r limits_loop()::__c
00000023 r setup_heli(unsigned char, Menu::arg const*)::__c
00000023 r test_optflow(unsigned char, Menu::arg const*)::__c
00000023 r Log_Read(int, int)::__c
00000024 T set_roll_pitch_mode(unsigned char)
00000024 W FilterWithBuffer<float, (unsigned char)7>::get_sample(unsigned char)
00000024 r setup_heli(unsigned char, Menu::arg const*)::__c
00000024 r load_parameters()::__c
00000024 r Log_Read_Current()::__c
00000024 r dump_log(unsigned char, Menu::arg const*)::__c
00000025 r report_sonar()::__c
00000026 T set_armed(bool)
00000026 t print_blanks(int)
00000026 r limits_loop()::__c
00000026 r print_wp(Location*, unsigned char)::__c
00000027 r test_logging(unsigned char, Menu::arg const*)::__c
00000027 r Log_Read_Nav_Tuning()::__c
00000027 B limits
00000028 T update_toy_throttle()
00000028 t gcs_send_message(ap_message)
00000028 W FilterWithBuffer<int, (unsigned char)3>::apply(int)
00000028 r Log_Read_Cmd()::__c
00000028 r Log_Read_PID()::__c
00000029 r setup_heli(unsigned char, Menu::arg const*)::__c
0000002a T set_compass_healthy(bool)
0000002a T init_rate_controllers()
0000002a r init_ardupilot()::__c
0000002a r Log_Read_Control_Tuning()::__c
0000002b r Log_Read_Iterm()::__c
0000002b r main_menu_help(unsigned char, Menu::arg const*)::__c
0000002c T set_gps_healthy(bool)
0000002c T set_land_complete(bool)
0000002c T set_yaw_rate_target(long, unsigned char)
0000002c T set_roll_rate_target(long, unsigned char)
0000002c T set_takeoff_complete(bool)
0000002c T set_pitch_rate_target(long, unsigned char)
0000002c t print_done()
0000002c t print_hit_enter()
0000002c W AP_Param::AP_Param(AP_Param::Info const*, unsigned int)
0000002c W AP_Param::AP_Param(AP_Param::Info const*, unsigned int)
0000002c W AP_Motors::output()
0000002e T set_simple_mode(bool)
0000002e t main_menu_help(unsigned char, Menu::arg const*)
0000002e t read_barometer()
0000002e t do_RTL()
0000002e W FilterWithBuffer<long, (unsigned char)5>::reset()
0000002f r test_radio(unsigned char, Menu::arg const*)::__c
0000002f r init_rc_out()::__c
0000002f r setup_range(unsigned char, Menu::arg const*)::__c
0000002f r Log_Read_IMU()::__c
0000002f r setup_factory(unsigned char, Menu::arg const*)::__c
00000030 t init_commands()
00000030 t _ZL15gcs_send_text_P12gcs_severityPK11prog_char_t.constprop.60
00000030 r setup_radio(unsigned char, Menu::arg const*)::__c
00000030 r Log_Read_Optflow()::__c
00000030 t mavlink_msg_mission_ack_send.constprop.57
00000031 r setup_heli(unsigned char, Menu::arg const*)::__c
00000031 r init_ardupilot()::__c
00000032 t reset_wind_I()
00000032 r set_throttle_accel_target(int)::__c
00000032 r setup_heli(unsigned char, Menu::arg const*)::__c
00000033 b pending_status
00000033 r limits_loop()::__c
00000033 r test_battery(unsigned char, Menu::arg const*)::__c
00000033 r test_logging(unsigned char, Menu::arg const*)::__c
00000034 T set_alt_change(unsigned char)
00000034 T set_throttle_accel_target(int)
00000034 t get_acro_yaw(long)
00000034 t wrap_360(long)
00000035 r test_radio_pwm(unsigned char, Menu::arg const*)::__c
00000038 T init_flip()
00000038 t print_divider()
00000038 t send_current_waypoint(mavlink_channel_t)
00000038 W AP_Baro::AP_Baro()
00000038 W AP_Baro::AP_Baro()
00000038 r test_ins(unsigned char, Menu::arg const*)::__c
00000039 r print_accel_offsets_and_scaling()::__c
0000003a t init_disarm_motors()
0000003b r init_rc_out()::__c
0000003c T dump_state()
0000003c t setup_show(unsigned char, Menu::arg const*)
0000003c T GCS_MAVLINK::init(AP_HAL::UARTDriver*)
0000003c W LowPassFilter<float>::set_time_constant(float, float)
0000003c T main
0000003e t exit_mission()
0000003e t wrap_180(long)
0000003e T GCS_MAVLINK::send_text_P(gcs_severity, prog_char_t const*)
0000003e W FilterWithBuffer<float, (unsigned char)7>::reset()
0000003e W AP_Buffer<float, (unsigned char)15>::peek(unsigned char)
0000003e W AP_Buffer<float, (unsigned char)5>::peek(unsigned char)
00000040 t Log_Write_Error(unsigned char, unsigned char)
00000040 t Log_Write_Event(unsigned char)
00000040 r log_menu_commands
00000040 W FilterWithBuffer<long, (unsigned char)5>::apply(long)
00000042 t print_enabled(bool)
00000042 t _ZL14Log_Write_Datahi.part.33
00000042 t report_version()
00000042 t find_next_nav_index(int)
00000042 r setup_heli(unsigned char, Menu::arg const*)::__c
00000044 t heli_get_servo(int)
00000044 W AP_Buffer<float, (unsigned char)15>::add(float)
00000044 W AP_Buffer<float, (unsigned char)5>::add(float)
00000044 r setup_flightmodes(unsigned char, Menu::arg const*)::__c
00000046 t readSwitch()
00000046 t _ZL14Log_Write_Datahl.part.32
00000048 T report_optflow()
0000004a t send_hwstatus(mavlink_channel_t)
0000004a r test_baro(unsigned char, Menu::arg const*)::__c
0000004b B geofence_limit
0000004c B gcs0
0000004c B gcs3
0000004c B ins
0000004e t send_meminfo(mavlink_channel_t)
00000050 r main_menu_commands
00000052 t dancing_light()
00000052 W FilterWithBuffer<float, (unsigned char)7>::apply(float)
00000052 W AP_Buffer<float, (unsigned char)15>::get()
00000052 W AP_Buffer<float, (unsigned char)5>::get()
00000052 W AP_ParamV<Vector3<float>, (ap_var_type)5>::set_and_save(Vector3<float>)
00000054 T mavlink_send_text(mavlink_channel_t, gcs_severity, char const*)
00000054 t setup_range(unsigned char, Menu::arg const*)
00000054 t telemetry_delayed(mavlink_channel_t)
00000056 T GCS_MAVLINK::_count_parameters()
00000058 t get_RTL_alt()
00000058 r Log_Read_INAV()::__c
0000005a T set_yaw_mode(unsigned char)
0000005a t check_missed_wp()
0000005a r scheduler_tasks
0000005a T GCS_MAVLINK::queued_waypoint_send()
0000005a B optflow
0000005c T read_receiver_rssi()
0000005c T update_super_simple_beading()
0000005c b mavlink_queue
0000005c W LowPassFilter<float>::set_cutoff_frequency(float, float)
0000005c B g_gps_driver
0000005f r setup_heli(unsigned char, Menu::arg const*)::__c
00000062 t report_frame()
00000062 t mavlink_msg_statustext_send
00000064 T perf_info_check_loop_time(unsigned long)
00000064 t change_command(unsigned char)
00000064 t update_GPS_light()
00000066 t check_usb_mux()
00000068 t init_compass()
00000068 t gcs_send_text_fmt(prog_char_t const*, ...)
0000006a t reset_I_all()
0000006a t read_control_switch()
0000006b B camera_mount
0000006c t startup_ground()
0000006e t setup_motors(unsigned char, Menu::arg const*)
00000070 W LowPassFilter<float>::apply(float)
0000007c t setup_optflow(unsigned char, Menu::arg const*)
0000007c t send_servo_out(mavlink_channel_t)
0000007c t report_flight_modes()
0000007c B barometer
0000007e t Log_Write_PID(unsigned char, long, long, long, long, long, float)
00000080 t setup_batt_monitor(unsigned char, Menu::arg const*)
00000080 W AC_PID::AC_PID(float const&, float const&, float const&, int const&)
00000080 W AC_PID::AC_PID(float const&, float const&, float const&, int const&)
00000082 t report_sonar()
00000082 t Log_Write_Cmd(unsigned char, Location*)
00000082 t print_wp(Location*, unsigned char)
00000082 t mavlink_msg_param_value_send
00000086 W AverageFilter<long, float, (unsigned char)5>::apply(long)
00000088 t setup_accel_scale(unsigned char, Menu::arg const*)
0000008a t send_heartbeat(mavlink_channel_t)
0000008a t read_num_from_serial()
0000008c t setup_accel(unsigned char, Menu::arg const*)
0000008e t test_tuning(unsigned char, Menu::arg const*)
00000090 t set_new_altitude(long)
00000090 t Log_Write_Attitude()
00000092 t report_gyro()
00000092 t setup_erase(unsigned char, Menu::arg const*)
00000092 t setup_frame(unsigned char, Menu::arg const*)
00000092 t get_pilot_desired_climb_rate(int)
00000096 t setup_factory(unsigned char, Menu::arg const*)
00000096 t _ZL19calc_location_errorP8Location.constprop.59
00000098 t _ZL12map_baudrateam.constprop.53
00000098 t Log_Read(int, int)
0000009a T GCS_MAVLINK::stream_trigger(GCS_MAVLINK::streams)
0000009c t get_yaw_slew(long, long, int)
0000009c t fifty_hz_loop()
0000009e t send_radio_out(mavlink_channel_t)
000000a0 t set_failsafe(bool)
000000a6 t setup_sonar(unsigned char, Menu::arg const*)
000000a8 t print_switch(unsigned char, unsigned char, bool)
000000a8 t send_radio_in(mavlink_channel_t)
000000a8 t report_batt_monitor()
000000aa t reset_nav_params()
000000b0 t setup_mode(unsigned char, Menu::arg const*)
000000b2 t test_wp_nav(unsigned char, Menu::arg const*)
000000b2 t init_optflow()
000000b4 t get_angle_boost(int)
000000b8 t send_raw_imu2(mavlink_channel_t)
000000b8 t init_arm_motors()
000000be t setup_compass(unsigned char, Menu::arg const*)
000000c5 B compass
000000c6 T print_latlon(AP_HAL::BetterStream*, long)
000000c8 T update_toy_altitude()
000000c9 B motors
000000ca W ModeFilter<int, (unsigned char)3>::apply(int)
000000cc t test_sonar(unsigned char, Menu::arg const*)
000000cc t test_eedump(unsigned char, Menu::arg const*)
000000d2 t _ZL20mavlink_send_message17mavlink_channel_t10ap_messagej.isra.30
000000d4 t test_radio(unsigned char, Menu::arg const*)
000000d4 t do_take_picture()
000000d6 T failsafe_check(unsigned long)
000000d6 t update_events()
000000d6 T GCS_MAVLINK::queued_param_send()
000000de t test_relay(unsigned char, Menu::arg const*)
000000e0 t test_radio_pwm(unsigned char, Menu::arg const*)
000000e4 t Log_Write_Optflow()
000000ea t report_tuning()
000000ec t setup_gyro(unsigned char, Menu::arg const*)
000000ee T limits_send_mavlink_status(mavlink_channel_t)
000000f0 t report_compass()
000000f0 r test_menu_commands
000000f0 B inertial_nav
000000f2 t perf_update()
000000f8 t test_baro(unsigned char, Menu::arg const*)
000000fa R GCS_MAVLINK::var_info
000000fc t mavlink_delay_cb()
00000102 t print_flight_mode(unsigned char)
00000106 t get_stabilize_roll(long)
00000106 t get_stabilize_pitch(long)
0000010e t send_ahrs(mavlink_channel_t)
00000112 t get_throttle_rate_stabilized(int)
00000114 t send_vfr_hud(mavlink_channel_t)
0000011e t set_next_WP(Location*)
00000120 r setup_menu_commands
00000132 t test_optflow(unsigned char, Menu::arg const*)
00000132 t verify_nav_wp()
00000132 t get_cmd_with_index(int)
00000136 t test_logging(unsigned char, Menu::arg const*)
00000136 t update_throttle_cruise(int)
0000013c t report_ins()
0000013c t get_desired_speed(int)
00000142 T set_recovery_home_alt()
00000142 t send_attitude(mavlink_channel_t)
00000144 r setup_motors(unsigned char, Menu::arg const*)::__c
0000014a T roll_flip()
0000014c t set_cmd_with_index(Location, int)
0000014e t test_wp(unsigned char, Menu::arg const*)
00000150 t send_nav_controller_output(mavlink_channel_t)
00000150 t get_throttle_althold_with_slew(int, int, int)
00000158 t super_slow_loop()
00000158 t get_yaw_rate_stabilized_ef(long)
00000162 t init_home()
00000165 B ahrs
00000168 t send_gps_raw(mavlink_channel_t)
00000170 t get_throttle_althold(long, int, int)
00000172 t get_stabilize_yaw(long)
00000174 t test_gps(unsigned char, Menu::arg const*)
00000182 t get_pilot_desired_throttle(int)
00000186 t set_nav_mode(unsigned char)
0000018a T roll_pitch_toy()
00000192 t read_radio()
00000194 T set_throttle_mode(unsigned char)
0000019e t test_mag(unsigned char, Menu::arg const*)
000001a0 t select_logs(unsigned char, Menu::arg const*)
000001a8 t send_raw_imu1(mavlink_channel_t)
000001ae t dump_log(unsigned char, Menu::arg const*)
000001b2 t update_GPS()
000001b6 T GCS_MAVLINK::data_stream_send()
000001b8 t send_location(mavlink_channel_t)
000001be T update_rate_contoller_targets()
000001c2 t _ZL24mavlink_try_send_message17mavlink_channel_t10ap_messagej.isra.29
000001ca t test_ins(unsigned char, Menu::arg const*)
000001d4 T update_simple_mode()
000001e0 t test_battery(unsigned char, Menu::arg const*)
000001ee t setup_flightmodes(unsigned char, Menu::arg const*)
000001f6 t _ZL21send_extended_status117mavlink_channel_tj.isra.28
000001fc t get_heli_rate_roll(long)
00000202 T update_yaw_mode()
00000204 t verify_RTL()
0000020a t report_radio()
00000218 t send_raw_imu3(mavlink_channel_t)
00000232 t get_throttle_rate(int)
0000023a t update_navigation()
0000025e t setup_radio(unsigned char, Menu::arg const*)
0000027e T GCS_MAVLINK::update()
000002a0 t read_battery()
000002d0 t execute_nav_command()
00000300 t update_altitude_est()
0000030a t report_heli()
0000033a W AP_AHRS_DCM::AP_AHRS_DCM(AP_InertialSensor*, GPS*&)
0000033a W AP_AHRS_DCM::AP_AHRS_DCM(AP_InertialSensor*, GPS*&)
00000346 t set_mode(unsigned char)
0000038c b g
000003d8 t calc_nav_rate(int)
00000454 t calc_loiter(int, int)
00000494 t print_log_menu()
000004c0 t _GLOBAL__sub_I_cliSerial
000005bc W Parameters::Parameters()
000005bc W Parameters::Parameters()
000005ce T update_throttle_mode()
000005d0 t tuning()
00000640 T loop()
00000674 T run_rate_controllers()
0000082a t slow_loop()
0000082e t setup_heli(unsigned char, Menu::arg const*)
00000876 T setup()
00000b6d R var_info
00000bd6 t medium_loop()
00000f9a T update_roll_pitch_mode()
0000131a t run_nav_updates()
000013a4 t log_callback(unsigned char)
00001988 T GCS_MAVLINK::handleMessage(__mavlink_message*)
