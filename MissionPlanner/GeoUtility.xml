<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GeoUtility</name>
    </assembly>
    <members>
        <member name="T:GeoUtility.GeoSystem.MapService">
            <summary><para>Definition der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse.</para></summary>
            <remarks><para>
            Die <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse implementiert Methoden und Eigenschaften für die Verwendung vom MapService Diensten. 
            Ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt repräsentiert für eine gegebene Koordinate ein dazugehöriges 
            Satelliten- bzw. Luftbild eines zu wählenden MapService Providers. MapService Provider sind 
            Interdienste die Satelliten-/Luftbilder anbieten. Derzeit werden die Anbieter Google Maps, 
            Microsoft Virtual Earth und Yahoo Maps unterstützt.
            </para></remarks>
        </member>
        <member name="T:GeoUtility.GeoSystem.Base.BaseSystem">
            <summary><para>Abstrakte Basisklasse von der alle Koordinatensystem-Klassen abgeleitet werden.</para></summary>
            <remarks><para>
            Diese Basisklasse stellt für alle abgeleiteten Klassen die Funktionen der internen Klasse
            <see cref="T:GeoUtility.Transformation"/> zur Verfügung. Die Klasse <see cref="T:GeoUtility.Transformation"/> führt 
            die zugrundeliegenden Transformationen aus, welche von den Koordinatensystem-Klassen in Form von
            impliziten und expliziten Typkonvertierungen, sowie den Funktionen <c>ConvertFrom</c> und <c>ConvertTo</c>
            zur Verfügung gestellt werden.
            </para></remarks>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.BaseSystem.Transform">
            <summary><para>Instanz der internen Klasse <see cref="T:GeoUtility.Transformation"/>.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.BaseSystem.#cctor">
            <summary><para>Der statische Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.BaseSystem.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse und weist 
            anschließend neue Werte für <see cref="P:GeoUtility.GeoSystem.MapService.Geo"/>, <see cref="P:GeoUtility.GeoSystem.MapService.Zoom"/> (15) und <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServer"/> (VirtualEarth) zu: 
            <code>
            using GeoUtility.GeoSystem;
            MapService map = new MapService();
            map.Geo = new Geographic(8.12345, 50.56789);
            map.Zoom = 15;
            map.MapServer = MapService.Info.MapServer.VirtualEarth;
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.#ctor(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Konstruktor mit Parameter für ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse und übergibt 
            ein zuvor erstelltes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>): 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            </code>
            </example>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.#ctor(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.MapService.Info.MapServer)">
            <summary><para>Konstruktor mit Parametern für ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt und die Enumeration 
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServer"/>, die festlegt, welcher MapService Dienst gewählt werden soll. 
            Diese Angabe kann jederzeit über die <see cref="P:GeoUtility.GeoSystem.MapService.MapServer"/>-Eigenschaft geändert werden.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse und übergibt 
            ein zuvor erstelltes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>) 
            und den zu wählenden <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServer"/>: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService.Info.MapServer server = MapService.Info.MapServer.YahooMaps;
            MapService map = new MapService(geo, server);
            </code>
            </example>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</param>
            <param name="server">Name des MapService Dienstes.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.#ctor(GeoUtility.GeoSystem.Geographic,System.Int32)">
            <summary><para>Konstruktor mit Parametern für ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt und <see cref="P:GeoUtility.GeoSystem.MapService.Zoom"/>.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse, übergibt ein 
            zuvor erstelltes <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>) 
            und legt die initiale Zoomstufe fest. Diese Einstellung kann jederzeit über die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.Zoom"/> geändert werden: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo, 15);                           // Zoomstufe 15
            </code>
            </example>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</param>        
            <param name="zoom">Zoomstufe. Mögliche Werte liegen im Bereich 1-21.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.#ctor(GeoUtility.GeoSystem.Geographic,System.Int32,GeoUtility.GeoSystem.MapService.Info.MapServer)">
            <summary><para>Konstruktor mit Parametern für ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt, <see cref="P:GeoUtility.GeoSystem.MapService.Zoom"/> 
            und <see cref="P:GeoUtility.GeoSystem.MapService.MapServer"/>.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse, übergibt ein 
            zuvor erstelltes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>) und legt die initiale Zoomstufe fest. 
            Diese Einstellung kann jederzeit über die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.Zoom"/> geändert werden: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService.Info.MapServer server = MapService.Info.MapServer.YahooMaps;     // MapService Dienst: Yahoo Maps
            MapService map = new MapService(geo, 15, server);                           // Zoomstufe 15
            </code>
            </example>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</param>        
            <param name="zoom">Zoomstufe. Mögliche Werte liegen im Bereich 1-21.</param>
            <param name="server">Name des MapService Dienstes als <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServer"/>-Enumeration.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.#ctor(GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase)">
            <summary><para>Konstruktor mit einem Parameter für ein aus der Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> 
            abgeleitetes Objekt. Diese Objekte speichern die individuellen Einstellungen für einen jeweiligen MapService Dienst. 
            Diese Einstellungen sind für jeden Dienst unterschiedlich. Die <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse übernimmt 
            normalerweise die Verwaltung der unterschiedlichen Dienste und Sie müssen sich nicht darum kümmern.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse, übergibt ein 
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile"/> Objekt, welches ein Satelliten-/Luftbild des 
            MapService Dienstes Microsoft Virtual Earth repräsentiert: 
            <code>
            using GeoUtility.GeoSystem;
            MapService.Info.MapServiceVirtualEarthMapsTile tile; 
            tile = new MapService.Info.MapServiceVirtualEarthMapsTile("a12020312");     // Virtual Earth Satelliten-/Luftbild
            MapService map = new MapService(tile);                           
            </code>
            </example>
            
            <param name="tile">Ein aus <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> abgeleitetes Objekt. Repräsentiert ein Satelliten-/Luftbild.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.PixelToGeographic(System.Int32,System.Int32)">
            <summary><para>Die Funktion berechnet die geographische Koordinate eines Punktes auf dem aktuellen 
            Satellitenbild. Bildursprung ist die linke obere Ecke (Punkt 0,0).</para></summary>
            
            <remarks><para>Ein anderer Algorithmus ist hier zu finden: <see cref="M:GeoUtility.GeoSystem.MapService.PixelToGeographic2(System.Int32,System.Int32)"/>.</para></remarks>
            
            <example>Das folgende Beispiel zeigt ein Beispiel für die Anwendung der Funktion: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            // berechnet die geographische Koordinate der linken oberen Ecke des Satellitenbildes 
            Geographic geo2 = map.GetGeoFromTilePos(0, 0);
            </code>
            </example>
            
            <param name="x">Abstand in Pixel (0-255) gemessen von der linken Seite des Bildes nach rechts.</param>
            <param name="y">Abstand in Pixel (0-255) gemessen von der oberen Seite des Bildes nach unten.</param>
            <returns>Geographische Koordinate als <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitengrad)</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.PixelToGeographic2(System.Int32,System.Int32)">
            <summary><para>Die Funktion berechnet die geographische Koordinate eines Punktes auf dem aktuellen 
            Satellitenbild. Bildursprung ist die linke obere Ecke (Punkt 0,0).</para></summary>
            
            <remarks><para>Dies ist ein alternetiver Algorithmus. Siehe auch: <see cref="M:GeoUtility.GeoSystem.MapService.PixelToGeographic(System.Int32,System.Int32)"/>.</para></remarks>
            
            <example>Das folgende Beispiel zeigt ein Beispiel für die Anwendung der Funktion: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            // berechnet die geographische Koordinate der linken oberen Ecke des Satellitenbildes 
            Geographic geo2 = map.GetGeoFromTilePos(0, 0);
            </code>
            </example>
            
            <param name="x">Abstand in Pixel (0-255) gemessen von der linken Seite des Bildes nach rechts.</param>
            <param name="y">Abstand in Pixel (0-255) gemessen von der oberen Seite des Bildes nach unten.</param>
            <returns>Geographische Koordinate als <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitengrad)</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.CoordsOnSameTile(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die Funktion prüft, ob die übergebene geographische Koordinate auf dem aktuellen Satellitenbild liegt.</para></summary>
            
            <example>Das folgende Beispiel prüft, ob die übergebene Koordinate auf dem Satellitenbild liegt. In diesem
            Beispiel gibt die Funktion <i>true</i> zurück, da offensichtlich die gleiche Koordinate ist, mit dem das 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt erzeugt wurde: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            bool issame = map.CoordsOnSameTile(geo);                //gibt true zurück, da die geographischen Koordinaten gleich sind. 
            </code>
            </example>
            
            <param name="geo">Die zu überprüfende Koordinate als <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt.</param>
            <returns>True, wenn die Koordinate auf dem Bild liegt. False, wenn die Koordinate außerhalb des Bildes liegt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.MapService.Info.MapServer)">
            <summary><para>Die überladene Funktion sucht ein gemeinsames Satelliten-/Luftbild, auf welchem 
            die aktuelle Koordinate und auch die übergebene Koordinate liegen. In dieser Funktion 
            kann auch der MapService Dienst angegeben werden.</para></summary>
            <remarks><para>Bei weit auseinander liegenden Koordinaten, wie beispielsweise Punkte in Amerika und Europa, 
            ist die Auflösung des Satellitenbildes erwartungsgemäß sehr gering.</para></remarks>
            
            <example>Das Beispiel erstellt für eine geographische Koordinate ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt, und legt damit 
            ein Satellitenbild fest. Anschließend berechnet die Funktion <see cref="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.MapService.Info.MapServer)"/> 
            für eine zweite Koordinate ein gemeinsames Satellitenbild, und gibt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/>
            Klasse zurück. In diesem Objekt hat man Zugriff auf eine <see cref="P:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase.URL"/>-Eigenschaft, die 
            den kompletten Pfad zu dem gemeinsamen Bild auf einem Server des gewählten MapService Providers darstellt. 
            <para>Benötigt man genauere Inforationen über das zurückgegebene Bild, kann man statt des
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/>-Objektes eine davon abgeleitete Klasse verwenden. Siehe dazu
            auch das Beispiel unter <see cref="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic)"/></para>
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(13.377829, 52.515934);              // Berlin Brandenburger Tor
            Geographic geo2 = new Geographic(13.376026, 52.518597);             // Berlin Reichstag
            MapService map = new MapService(geo);
            MapService.Info.MapServiceTileBase tile;                
            tile = map.CalculateCommonTile(geo2, MapService.Info.MapServer.GoogleMaps);
            string output = tile.URL;
            </code>
            </example>
            
            <param name="geo">Vergleichsposition als <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt.</param>
            <param name="server">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServer"/> Element, das den zu wählenden MapService Dienst angibt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> Objekt, das genauere Informationen zum Satellitenbild liefert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die überladene Funktion sucht ein gemeinsames Satelliten-/Luftbild, auf welchem 
            die aktuelle Koordinate und auch die übergebene Koordinate liegen. Für weitere Informationen 
            siehe auch <see cref="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.MapService.Info.MapServer)"/></para></summary>
            
            <example>Das Beispiel erstellt für eine geographische Koordinate ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt, und legt damit 
            ein Satellitenbilds fest. Anschließend berechnet die Funktion <see cref="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic)"/> für eine zweite 
            Koordinate ein gemeinsames Satellitenbild, und gibt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/>
            Klasse zurück. In diesem Objekt hat man Zugriff auf eine <see cref="P:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase.URL"/>-Eigenschaft, die den kompletten
            Pfad zu dem gemeinsamen Bild auf einem Server des gewählten MapService Providers darstellt. 
            <para>Benötigt man genauere Inforationen über das zurückgegebene Bild, kann man anstatt  
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> eine davon abgeleitete Klasse verwenden. Siehe 
            auch das Beispiel unter <see cref="M:GeoUtility.GeoSystem.MapService.CalculateCommonTile(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.MapService.Info.MapServer)"/></para>
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(13.377829, 52.515934);              // Berlin Brandenburger Tor
            Geographic geo2 = new Geographic(13.376026, 52.518597);             // Berlin Reichstag
            MapService map = new MapService(geo);
            MapService.Info.MapServiceTileBase tile;
            tile = map.CalculateCommonTile(geo2, MapService.Info.MapServer.YahooMaps);
            MapService.Info.MapServiceYahooMapsTile yahoo = (MapService.Info.MapServiceYahooMapsTile)tile;
            string output = "Um beide Punkte auf einem Bild zu haben muss mindestens die Zoomstufe ";
            output += yahoo.Zoom.ToString() + " verwendet werden.";
            </code>
            </example>
            
            <param name="geo">Vergleichsposition als <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> Objekt, das genauere Informationen zum Satellitenbild liefert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Move(GeoUtility.GeoSystem.MapService.Info.MapDirection,System.Int32,System.Boolean)">
            <summary><para>Die Funktion berechnet das Satellitenbild, das in der angegebenen Richtung liegt.</para></summary>
            <remarks><para>Dabei können auch mehrere Bewegungsschritte mithilfe des <i>steps</i> Parameters auf einmal 
            ausgeführt werden. <para>Der <i>center</i> Parameter legt fest, ob bei einer Verschiebung der Bewegung auch die 
            zugrundeliegende geographische Koordinate, mit dem das <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt erzeugt wurde, angepasst werden soll. 
            Bei <i>true</i> wird die Koordinate auf die Mitte des neuen Bildes festgelegt, bei <i>false</i> wird die 
            Koordinate nicht angepasst, und zeigt somit auf ein anderes Satellitenbild. Dies kann dennoch gewünscht sein, 
            wenn beispielsweise eine Ursprungsposition später wiederverwendet werden soll.</para></para></remarks>
            
            <example>Das folgende Beispiel berechnet mit Hife der <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapDirection"/>-Enumeration das 
            Satellitenbild, das in nordwestlicher Richtung angrenzt. Die zugrundeliegende geographische Koordinate wird nicht 
            angepasst, kann also später wiederverwendet werden:
            <code>
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            MapService.Info.MapServiceTileBase tile;
            tile = map.Move(MapService.Info.MapDirection.Northwest, 1, false);      // Ein Schritt nach Nordwesten
            string output = tile.URL;
            </code>
            </example>
            
            <param name="direction">Eine in <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapDirection"/> definierte Verschiebungsrichtung.</param>
            <param name="steps"> Die Anzahl der Bewegungen in die Angegebene Richtung (Maximal 10, Minimal 1).</param>
            <param name="center">True, wenn die zugrundeliegende geographische Position auf die neue Bildmitte verschoben werden soll. 
            False, falls die zugrundeliegende geographische Position erhalten bleiben soll.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> Objekt, welches eine vollständige URL zur Verfügung stellt und über 
            die abgeleiteten Klassen den Zugriff auf weitere Informationen ermöglicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.ToString">
            <summary><para>Die Funktion gibt kurzen einen String mit den geographischen Koordinaten und der Zoomstufe zurück.</para></summary>
            
            <example>Das folgende Beispiel zeigt eine Ausgebe der Methode: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); 
            MapService map = new MapService(geo, 15);
            map.ToString();                           // Ausgabe: "8.12345; 50.56789; 15"
            </code>
            </example>
            
            <returns>Kurzer String mit den geographischen Koordinaten und der Zoomstufe des <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objektes.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.ToLongString">
            <summary><para>Die Funktion gibt kurzen einen String mit den geographischen Koordinaten und der Zoomstufe zurück.</para></summary>
            
            <example>Das folgende Beispiel zeigt eine Ausgebe der Methode: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); 
            MapService map = new MapService(geo, 15);
            map.ToLongString();                        / Ausgabe: "Breite: 8.12345; Länge: 50.56789; Zoom: 15; MapService: GoogleMaps"
            </code>
            </example>
            
            <returns>Langer String mit den geographischen Koordinaten und der Zoomstufe des <see cref="T:GeoUtility.GeoSystem.MapService"/> Objektes.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.op_Explicit(GeoUtility.GeoSystem.MapService)~GeoUtility.GeoSystem.Geographic">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MapService"/> nach <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt in ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt 
            im internationalen <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>:
            <code>
            // Beispiel für eine Typumwandlung nach Geographic. Da keine Koordinaten bei der Erzeugung des 
            // <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekts angegeben wurden, wird Bildmitte angenommen. 
            using GeoUtility.GeoSystem;
            MapService.Info.MapServiceVirtualEarthMapsTile tile; 
            tile = new MapService.Info.MapServiceVirtualEarthMapsTile("a12020312");     // Virtual Earth Satelliten-/Luftbild
            MapService map = new MapService(tile);                                      // MapService Objekt erzeugen
            Geographic geo = (Geographic)map;                                           
            </code>
            </example>
            
            <param name="maps">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitengrad).</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.op_Explicit(GeoUtility.GeoSystem.MapService)~GeoUtility.GeoSystem.UTM">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MapService"/> nach <see cref="T:GeoUtility.GeoSystem.UTM"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt in ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt: 
            <code>
            using GeoUtility.GeoSystem;
            MapService map = new MapService(new Geographic(8.12345, 50.56789));
            UTM utm = (UTM)map;                                                         // Typumwandlung in ein UTM Objekt
            string output = utm.ToString();                                             // Ausgabe: "32U 0437924 5602141"
            </code>
            </example>
            
            <param name="maps">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.op_Explicit(GeoUtility.GeoSystem.MapService)~GeoUtility.GeoSystem.GaussKrueger">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MapService"/> nach <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt in ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt: 
            <code>
            using GeoUtility.GeoSystem;
            MapService map = new MapService(new Geographic(8.12345, 50.56789));
            GaussKrueger gauss = (GaussKrueger)map;                                   // Typumwandlung in ein GaussKrueger Objekt
            string output = gauss.ToLongString();                                       // Ausgabe: "Rechts: 3437975; Hoch: 5603943"
            </code>
            </example>
            
            <param name="maps">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.op_Explicit(GeoUtility.GeoSystem.MapService)~GeoUtility.GeoSystem.MGRS">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MapService"/> nach <see cref="T:GeoUtility.GeoSystem.MGRS"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt in ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt: 
            <code>
            using GeoUtility.GeoSystem;
            MapService map = new MapService(new Geographic(8.12345, 50.56789));
            MGRS mgrs = (MGRS)map;                                                      // Typumwandlung in ein MGRS Objekt
            string output = mgrs.ToString();                                            // Ausgabe: "32UMB3792402141"
            </code>
            </example>
            
            <param name="maps">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.ConvertFrom``1(``0)">
            <summary><para>Die generische Methode konvertiert den generischen Typ T in das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt in das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt 
            mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.MapService.ConvertFrom``1(``0)">ConvertFrom&lt;T&gt;(T)</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map;
            map.ConvertFrom&lt;Geographic&gt;(geo);
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <param name="t">Das zu konvertierende Objekt als generischer Parameter.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.ConvertTo``1">
            <summary><para>Die generische Methode konvertiert ein Objekt aus der Basisklasse 
            <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> in ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt in ein neues 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.MapService.ConvertTo``1">ConvertTo&lt;T&gt;</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map;
            map = geo.ConvertTo&lt;MapService&gt;();
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <returns>Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.MemberwiseClone">
            <summary><para>Erstellt eine flache Kopie des aktuellen Objekts.</para></summary>
            <returns>Ein neues <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt als flache Kopie.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtabelle wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein beliebiges Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Equals(GeoUtility.GeoSystem.MapService)">
            <summary>Die Funktion wird wegen der Implementierung der Schnittstelle IEquatable notwendig.</summary>
            <param name="map">Ein beliebiges <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.op_Equality(GeoUtility.GeoSystem.MapService,GeoUtility.GeoSystem.MapService)">
            <summary>Überladener Gleichheitsoperator.</summary>
            <param name="mapA">Das erste zu vergleichende Objekt.</param>
            <param name="mapB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen Werte haben. False, wenn die Werte nicht gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.op_Inequality(GeoUtility.GeoSystem.MapService,GeoUtility.GeoSystem.MapService)">
            <summary>Überladener Ungleichheitsoperator.</summary>
            <param name="mapA">Das erste zu vergleichende Objekt.</param>
            <param name="mapB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte mindestens einen unterschiedlichen Wert haben. False, wenn alle Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Geo">
            <summary><para>Die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.Geo"/> gibt die aktuellen Koordinaten (Längen-/Breitengrad) des 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objektes zurück, oder legt sie fest.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse und legt anschließend 
            neue Koordinaten fest: 
            <code>
            using GeoUtility.GeoSystem;
            MapService map = new MapService();
            map.Geo = new Geographic(8.12345, 50.56789);
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Zoom">
            <summary><para>Die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.Zoom"/> gibt die aktuelle Zoomstufe des <see cref="T:GeoUtility.GeoSystem.MapService"/> Objektes zurück, oder legt sie fest.</para></summary>
            <remarks><para>Zulässige Werte für die Zoomstufe sind im Bereich von 1-21. Dabei bedeutet 1: kein Zoom, das heisst, 
            es ist ein Satellitenbild der Erde zu sehen. Je höher die Zoomstufe, desto genauere Details sind zu erkennen, bis 
            hin zu der maximalen Zoomstufe 21. Bitte beachten Sie, dass nicht alle Satelliten- bzw. Luftbilder in hohen 
            Auflösungen verfügbar sind. Einige Gegenden der Erde sind nur in weitaus geringeren Zoomstufen verfügbar. Dies kann
            an der Bedeutung dieser Region liegen, oder auch Sicherheitsaspekte können eine Rolle spielen. Möglicherweise 
            bietet ein anderer MapService Dienst für eine bestimmte Region eine bessere Abdeckung mit hochauflösenden Bildern.</para></remarks>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse und legt die Zoomstufe fest: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            map.Zoom = 15;
            </code>
            </example>        
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.MapServer">
            <summary><para>Die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.MapServer"/> legt fest, welcher MapService Dienst gewählt werden soll. 
            Diese Angabe kann jederzeit geändert werden.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse legt den 
            MapService-Dienst durch die <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServer"/>-Enumeration fest: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);
            map.MapServer = MapService.Info.MapServer.GoogleMaps;
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Center">
            <summary><para>Die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.Center"/> legt fest, ob Die Koordinate auf dem Bild 
            zentriert werden soll. Dies wirkt sich auf das Laden des Bildes aus, da ein Pseudo-Satellitenbild 
            geladen wird, das die Koordinate in der Mitte des Bildes darstellt. Desweiteren wirkt es sich auf 
            Funktionen aus, die Bildpositionen in Koordinatenpositionen und umgekehrt berechnen.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.TileInfo">
            <summary><para>Die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.TileInfo"/> hält die verfügbaren Informationen über das aktuell gewählte 
            Satelliten-/Luftbild bereit und gibt diese Informationen in einem <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/> Objekt zurück.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse und verwendet 
            anschließend die Informationen aus der <see cref="P:GeoUtility.GeoSystem.MapService.TileInfo"/>-Klasse um eine URL von dem Satellitenbild 
            auf dem gewählten MapService zu erhalten: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo, 20);               // Zoomstufe 20;
            Info.TileInfo info = map.Tile;
            string url = info.URLGoogleMaps;                        // URL zum Satellitenbild auf dem Server des Dienstes
            </code>
            </example>        
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Tile">
            <summary><para>Die Eigenschaft <see cref="P:GeoUtility.GeoSystem.MapService.Tile"/> gibt die vom aktuell gewählten MapService Dienst benutzten 
            Schlüssel-Koordinaten zurück, oder legt über diese Daten ein neues Satelliten-/Luftbild fest.</para></summary>
            <remarks><para>Statt ein neues Satelliten-/Luftbild über eine geographische Koordinatenangabe zu auszuwählen,
            wird hier der interne Schlüssel des gewählten MapService Dienstes direkt angesprochen. Dies erfordert einige 
            Kenntnisse bezüglich der Syntax des gewünschten MapService-Dienstes. Die Eigenschaft wird daher vermutlich 
            nur in besonderen Fällen verwendet. Üblicherweise ist die <see cref="P:GeoUtility.GeoSystem.MapService.Geo"/>-Eigenschaft geeigneter, um ein
            neues Bild zu erhalten. 
            Die Eigenschaft verwendet eine aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> abgeleitete Klasse. 
            Diese Klassen speichern für einen jeweiligen MapService Dienst die entsprechend benötigten Informationen. 
            Diese Informationen entsprechen der Repräsentation eines Satelliten-/Luftbildes und sie sind daher
            für jeden MapService Provider unterschiedlich. Die <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse übernimmt normalerweise die 
            Verwaltung der unterschiedlichen Dienste und Sie müssen sich nicht darum kümmern.</para></remarks>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse, übergibt ein 
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile"/> Objekt, welches ein Satelliten-/Luftbild des 
            MapService Dienstes Microsoft Virtual Earth repräsentiert: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService map = new MapService(geo);                           
            MapService.Info.MapServiceVirtualEarthMapsTile tile; 
            tile = new MapService.Info.MapServiceVirtualEarthMapsTile("a12020312");     // Virtual Earth Satelliten-/Luftbild
            map.Tile(tile);
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Images">
            <summary><para>Die Eigenschaft bindet die Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images"/> ein, und stellt deren Funktionalitäten zur 
            Verfügung. Nähere Angaben und Beispiele siehe unter <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images"/>.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Helper">
            <summary><para><see cref="T:GeoUtility.GeoSystem.MapService.Helper"/> beinhaltet Klassen, die nicht zu den Kernfunktionen der 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse gehören, aber nützliche Aufgaben verrichten. Sie selbst implementiert 
            keine eigenen Methoden oder Eigenschaften, sondern dient der Strukturierung. Methoden und Eigenschaften 
            werden von den Unterklassen bereitgestellt.</para></summary>
            <summary><para><see cref="T:GeoUtility.GeoSystem.MapService.Helper"/> beinhaltet Klassen, die nicht zu den Kernfunktionen der 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse gehören, aber nützliche Aufgaben verrichten. Sie selbst implementiert 
            keine eigenen Methoden oder Eigenschaften, sondern dient der Strukturierung. Methoden und Eigenschaften 
            werden von den Unterklassen bereitgestellt.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Helper.Images">
            <summary><para>Die Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images"/> implementiert Methoden, mit deren Hilfe Bilder abgerufen 
            bzw. manipuliert werden können. Die Klasse sollte in der Regel nicht direkt instanziert werden, sondern 
            über die <see cref="P:GeoUtility.GeoSystem.MapService.Images"/>-Eigenschaft eines <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekts.</para></summary>
            <summary><para>Die Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images"/> implementiert Methoden, mit deren Hilfe Bilder abgerufen 
            bzw. manipuliert werden können. Die Klasse sollte in der Regel nicht direkt instanziert werden, sondern 
            über die <see cref="P:GeoUtility.GeoSystem.MapService.Images"/>-Eigenschaft eines <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekts.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.#ctor(GeoUtility.GeoSystem.MapService)">
            <summary><para>Ein Konstruktor mit einem Parameter als Verweis auf die aktuelle MapService-Instanz.</para></summary>
            <param name="parent">Die aktuelle MapService-Instanz.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load">
            <summary><para>Die überladene Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load"/> lädt das Satellitenbild, welches durch das aktuelle  
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt definiert ist. Eventuell auftretende Exceptions werden unterdrückt.</para></summary>
            
            <example>
            Das folgende Beispiel zeigt die Verwendung der Funktion. Der Beispielcode verwendet ein
            <strong>PictureBox</strong>-Steuerelement zur Anzeige des Bildes.
            <code>
            using System.Drawing;
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService.Info.MapServer server = MapService.Info.MapServer.VirtualEarth;
            MapService map = new MapService(geo, server);
            map.Zoom = 15;
            Image img = map.Image.Load();
            picturebox.Image = img;
            </code>
            </example>
            
            <returns>Ein Bild vom allgemeinen Typ <see cref="T:System.Drawing.Image"/>.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(System.Int32,System.Boolean)">
            <summary><para>Die überladene Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(System.Int32,System.Boolean)"/> lädt das Satellitenbild, welches durch das aktuelle  
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt definiert ist. Es wird ein Bild in der Größe der übergebenen Parameter 
            zurückgegeben. Eventuell auftretende Exceptions werden unterdrückt.</para></summary>
            
            <example>
            Das folgende Beispiel zeigt die Verwendung der Funktion. Der Beispielcode verwendet ein
            <strong>PictureBox</strong>-Steuerelement zur Anzeige des Bildes.
            <code>
            using System.Drawing;
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService.Info.MapServer server = MapService.Info.MapServer.VirtualEarth;
            MapService map = new MapService(geo, server);
            map.Zoom = 15;
            Image img = map.Image.Load(200, 200);
            picturebox.Image = img;
            </code>
            </example>
            <param name="size">Größe des zurückgegebenen Bildes in Pixel (20 - 2000)</param>
            <param name="mark">Position markieren</param>
            <returns>Ein Bild vom allgemeinen Typ <see cref="T:System.Drawing.Image"/>.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(System.Boolean)">
            <summary><para>Die überladene Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load"/> lädt das Satellitenbild, welches durch das aktuelle  
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt definiert ist.</para></summary>
            
            <param name="silent">Legt fest, ob im Fehlerfall eine Exception weitergegeben wird (false) oder nicht (true).</param>
            <returns>Ein Bild vom allgemeinen Typ <see cref="T:System.Drawing.Image"/>.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(System.Boolean,System.Int32,System.Boolean)">
            <summary><para>Die Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(System.Boolean,System.Int32,System.Boolean)"/> gibt ein Satellitenbild zurück, so dass die
            so dass die Koordinate, die durch das <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt festgelegt ist, sich in der Mitte
            des Bildes befindet.</para></summary>
            <remarks><para>Die Koordinate befindet sich in der Regel nicht in der Mitte eines von einem Provider 
            zurück gelieferten Satellitenbildes. Diese Funktion berechnet die Abweichung, und lädt intern die notwendigen 
            angrenzenden Satellitenbilder nach, fügt sie zusammen und beschneidet das so entstandene Bild auf die 
            Größe eines normalen Satellitenbildes. Über den Parameter <i>threshold</i> kann angegeben werden, ab welcher 
            Abweichung vom Mittelpunkt eines Bildes eine Koordinatennormalisierung stattfinden soll. Bitte beachten 
            Sie, dass bei einer notwendigen Normalisierung 4 Bilder nachgeladen werden müssen. Dies kann bei langsamen 
            Internetverbindungen eventuell zu kurzen Verzögerungen oder erhöhtem Netzverkehr führen.</para></remarks>
            
            <param name="centered">Legt fest, ob der zugrundeliegende Koordinatenpunkt auf dem resultierenden Bild zentriert werden soll.</param>
            <param name="threshold">Abweichung vom Mittelpunkt in Bildpunkten (Pixel), ab der eine Normalisierung durchgeführt werden soll. Mögliche Werte liegen zwischen 0 (immer normalisieren) bis 100 (keine Normalisierung).</param>
            <param name="silent">Legt fest, ob im Fehlerfall eine Exception weitergegeben wird (false) oder nicht (true).</param>
            <returns>Ein Bild vom Typ <see cref="T:System.Drawing.Image"/> mit einem eventuell zentrierten Koordinatenpunkt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase,System.Boolean)">
            <summary><para>Die überladene Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load(GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase,System.Boolean)"/> lädt das Satellitenbild, welches durch den Parameter vom Typ 
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> festgelegt wurde von dem gewünschten MapService-Provider. 
            Ein Beispiel ist in der Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Load"/> zu finden.</para></summary>
            
            <param name="tile">Ein Objekt vom Typ <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/>, das über die <see cref="P:GeoUtility.GeoSystem.MapService.Tile"/>-Eigenschaft des <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objektes erhalten werden kann.</param>
            <param name="silent">Legt fest, ob im Fehlerfall eine Exception weitergegeben wird (false) oder nicht (true).</param>
            <returns>Ein Bild vom allgemeinen Typ <see cref="T:System.Drawing.Image"/>.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.ValidImage(System.Drawing.Image)">
            <summary>
            Versucht zu erkennen, ob das vom Virtual Earth Dienst zurückgegebene Bild ein Fehlerbild oder
            ein reguläres Satellitenbild ist. Andere Provider geben einen HTTP 404 Status zurück.
            </summary>
            <param name="image">Das zu überprüfende Bild</param>
            <returns>True, wenn es sich um ein Satellitenbild handelt. False, wenn es ein Fehlerbild ist.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Merge(System.Drawing.Image[0:,0:])">
            <summary><para>Die überladene Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Merge(System.Drawing.Image[0:,0:])"/> verschmilzt mehrere Bilder, und gibt ein 
            Bild als Typ <see cref="T:System.Drawing.Image"/> zurück. Die Bilder werden in einem Image-Array übergeben. 
            Der erste Index bezeichnet die Zeilen, der zweite Index die Spalten der Bildermatrix. 
            In dieser Methode sollten die Bilder in der Höhe und Breite den Standardmaßen eines Satellitenbilds entsprechen (256 Pixel). 
            Prinzipiell ist die Anzahl der Zeilen und Spalten des Arrays nicht beschränkt, beachten Sie aber dennoch den 
            Speicherbedarf. Die <see cref="T:System.Drawing.Image"/>-Objekte in dem Array können auch <strong>null</strong> sein. 
            Die Einzelbilder im Array sollten jeweils die gleiche Breite und Höhe haben. Beispiel siehe 
            <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Merge(System.Drawing.Image[0:,0:],System.Drawing.Rectangle)"/>.</para></summary>
            
            <param name="array">Ein Array aus <see cref="T:System.Drawing.Image"/>-Objekten in der Form Image[Zeilen, Spalten].</param>
            <returns>Ein verschmolzenes <see cref="T:System.Drawing.Image"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Merge(System.Drawing.Image[0:,0:],System.Drawing.Rectangle)">
            <summary><para>Die überladene Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Merge(System.Drawing.Image[0:,0:],System.Drawing.Rectangle)"/> verschmilzt mehrere Bilder, und gibt ein 
            Bild als Typ <see cref="T:System.Drawing.Image"/> zurück. Die Bilder werden in einem Image-Array übergeben. 
            Der erste Index bezeichnet die Zeilen, der zweite Index die Spalten der Bildermatrix. 
            Die Höhe und Breite der Einzelbilder im Array kann durch den Parameter angegeben werden. 
            Prinzipiell ist die Anzahl der Zeilen und Spalten des Arrays nicht beschränkt, beachten Sie aber dennoch den 
            Speicherbedarf. Die <see cref="T:System.Drawing.Image"/>-Objekte in dem Array können auch <strong>null</strong> sein. 
            Die Einzelbilder im Array sollten jeweils die gleiche Breite und Höhe haben.</para></summary>
            
            <example>Das Beispiel zeigt die Verschmelzung einer Bildermatrix aus 2 mal 2 Bildern. 
            <code>
            using System.Drawing;
            using GeoUtility.GeoSystem;
            Image[,] array = new Image[2, 2];
            array[0, 0] = new Bitmap(@"c:\norrthwest.jpg");
            array[0, 1] = new Bitmap(@"c:\northeast.jpg");
            array[1, 0] = new Bitmap(@"c:\southwest.jpg");
            array[1, 1] = new Bitmap(@"c:\southeast.jpg");
            Rectangle rect = new Rectangle(0, 0, 256, 256);                     // Höhe und Breite der Bilder ist 256 Pixel (Bildpunkte)           
            Image mergedImage = MapService.Image.Merge(array, rect);
            </code>
            </example>
            
            <param name="array">Ein Array aus <see cref="T:System.Drawing.Image"/>-Objekten in der Form Image[Zeilen, Spalten].</param>
            <param name="rect">Der <see cref="T:System.Drawing.Rectangle"/>-Parameter legt die Höhe und Breite eines Einzelbildes fest.</param>
            <returns>Ein verschmolzenes <see cref="T:System.Drawing.Image"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Area(GeoUtility.GeoSystem.MapService.Info.MapDirection,System.Boolean)">
            <summary><para>Die Funktion ruft Einzelbilder aus der Umgebung des aktuellen Satellitenbilds ab, und fügt sie zu 
            einem Bild zusammen. Der Parameter vom Typ <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapDirection"/> bestimmt die Richtung, in der 
            die Bilder abgerufen werden. Der Wert <see cref="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.Center"/> fügt alle angrenzenden Luftbilder, 
            also 9 Einzelbilder in einer 3x3 Matrix, zu einem Bild zusammen. Die Werte <see cref="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.North"/>, 
            <see cref="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.South"/>, <see cref="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.West"/> und <see cref="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.East"/> 
            fügen 6 Einzelbilder in einer 2x3 bzw. 3x2 Matrix zusammen. Alle anderen Werte der <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapDirection"/>-Enumeration 
            fügen 4 Einzelbilder in einer 2x2 Matrix zusammen. Bitte beachten Sie, dass der Vorgang je nach Verbindung oder 
            Serverauslastung längern andauern kann, und es möglicherweise zu Fehlern kommt.</para></summary>
            
            <example>Das Beispiel zeigt eine mögliche Anwendung der Methode, indem das aktuelle Satellitenbild, und alle 
            angrenzenden Bilder (9x9 Matrix) zu einem Gesamtbild verschmolzen werden. 
            <code>
            using System.Drawing;
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MapService.Info.MapServer server = MapService.Info.MapServer.GoogleMaps;
            MapService map = new MapService(geo, server);
            map.Zoom = 18;
            Image imageArea = map.Image.Area(MapService.Info.MapDirection.Center);
            </code>
            </example>
            
            <param name="direction">Bestimmt die Richtung in der die Bilder zusammengefügt werden sollen.</param>
            <param name="extended">Wenn True, wird ein erweiterter Umgebungsbereich geladen.</param>
            <returns>Ein zusammengesetztes Bild vom Typ <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Area(GeoUtility.GeoSystem.MapService.Info.MapDirection,System.Boolean,GeoUtility.GeoSystem.Helper.GeoPoint@)">
            <summary><para>Die Methode gibt zusätzlich zur <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Area(GeoUtility.GeoSystem.MapService.Info.MapDirection,System.Boolean)"/>-Methode den Bildpunkt (x/y)
            auf dem Satellitenbild zurück, der der Koordinate entspricht.</para></summary>
            
            <param name="direction">Bestimmt die Richtung in der die Bilder zusammengefügt werden sollen.</param>
            <param name="extended">Wenn True, wird ein erweiterter Umgebungsbereich geladen.</param>
            <param name="pointInArea">Der out-Parameter gibt den Bildpunkt der Koordinate im Umgebungsbild zurück.</param>
            <returns>Ein zusammengesetztes Bild vom Typ <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Parent">
            <summary><para>Die interne Eigenschaft legt den Verweis auf die aktuelle MapService-Instanz fest, oder ruft sie ab.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cached">
            <summary><para>Die Eigenschaft legt fest, ob Caching verwendet werden soll, oder ruft dei aktuelle Einstellungab.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.CacheSize">
            <summary><para>Die Eigenschaft legt die Cachegröße fest oder ruft sie ab.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Helper.Images.Cache">
            <summary><para>Die statische Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images.Cache"/> implementiert Caching-Funktionalitäten 
            und verwendet dabei eine LRU-Strategie (Least recently used).</para></summary>
            
            <example>Das folgende Beispiel zeigt die Verwendung des Satellitenbildcachings:
            <code>
            MapService.Helper.Images.Cache.Size = 50;        // Maximale Größe des Cache, hier 50 Bilder
            MapService.Helper.Images.Cache.Enabled = true;   // Cache aktivieren
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Add(GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem)">
            <summary><para>Die interne Funktion fügt ein neues <see cref="T:GeoUtility.GeoSystem.MapService"/>/<see cref="T:System.Drawing.Image"/>-Paar mit 
            Hilfe der <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem"/>-Klasse zum Cache hinzu. Verfügt der Cache bereits über die 
            maximale Anzahl an Bildern, wird mit Hilfe der LRU-Strategie zuvor ein Bild gelöscht.</para></summary>
            
            <param name="item">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem"/>-Objekt, das hizugefügt werden soll.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Clear">
            <summary><para>Löscht alle Elemente aus dem Cache.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Contains(GeoUtility.GeoSystem.MapService)">
            <summary><para>Prüft, ob ein Bild bereits im Cache vorhanden ist.</para></summary>
            
            <param name="item">Ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt, das das Bild repräsentiert.</param>
            <returns>True, wenn ein passendes Bild vorhanden ist, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Shrink(System.Int32)">
            <summary><para>Verkleinert die Cachegröße.</para></summary>
            
            <param name="size">Neue Größe.</param>
            <returns>True, wenn der Vorgang erfolgreich war, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Remove(GeoUtility.GeoSystem.MapService)">
            <summary><para>Löscht ein Bild aus dem Cache.</para></summary>
            
            <param name="map">Ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt, das das Bild repräsentiert.</param>
            <returns>True, wenn ein Bild gelöscht wurde, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.GetImage(GeoUtility.GeoSystem.MapService)">
            <summary><para>Die Methode <see cref="M:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.GetImage(GeoUtility.GeoSystem.MapService)"/> versucht ein entsprechendes Bild im Cache 
            zu finden. Ist kein Bild vorhanden, gibt die Methode null zurück.</para></summary>
            
            <param name="item">Ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt, welches ein Bild repräsentiert.</param>
            <returns>Das Satellitenbild, oder null, wenn kein passendes Bild gefunden wurde.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Enabled">
            <summary><para>Aktiviert oder deaktiviert den Cache. Bei Deaktivierung werden alle eventuell 
            vorhandenen Bilder aus dem Cache gelöscht.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Size">
            <summary><para>Legt die maximale Cachegröße fest. Bei einer Änderung der Cachegröße, 
            werden alle eventuell im Cache vorhandenen Bilder gelöscht.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Count">
            <summary><para>Gibt die Anzahl der gespeicherten Bilder im Cache zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.ImageCache">
            <summary><para>Gibt den internen Cachespeicher zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Maps">
            <summary><para>Gibt eine Auflistung der im Cache vorhandenen <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekte 
            zurück, die mit den gespeicherten Bildern assoziiert sind.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.Images">
            <summary><para>Gibt eine Auflistung der im Cache gespeicherten Bilder zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.Cache.EqualityMode">
            <summary><para>Legt fest, wie interne Vergleichsoperationen durchgeführt werden. 
            Nähere Informationen unter <see cref="T:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode"/>.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem">
            <summary><para>Repräsentiert ein Cache-Element. Es besteht aus einem <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt 
            und einem dazugehörenden Bild.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem.#ctor">
            <summary><para>Standart-Kontruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem.#ctor(GeoUtility.GeoSystem.MapService,System.Drawing.Image)">
            <summary><para>Konstruktor mit den Parametern für das Bild, und das 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt.</para></summary>
            
            <param name="map">Das <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt.</param>
            <param name="image">Das Satellitenbild als Typ <see cref="T:System.Drawing.Image"/>-Objekt.</param>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem.SatImage">
            <summary><para>Das Satellitenbild.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Helper.Images.CacheItem.Map">
            <summary><para>Das <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode">
            <summary><para>Mit Hilfe dieser Enumeration kann gesteuert werden, wie Vergleiche mit 
            Cache-Elementen durchgeführt werden. Bei der Wahl von <strong>MapService</strong> wird die 
            Wertgleichheit zweier <see cref="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService"/>-Objekte getestet. Bei der Wahl von 
            <strong>Image</strong> werden mehr Bilder gefunden. Hier wird auch getestet, ob ein 
            <see cref="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService"/>-Objekt den gleichen Bildbereich abdeckt. Genauer gesagt, werden 
            auch Bilder im Cache gefunden, bei denen ein <see cref="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService"/>-Objekt unzentriert ist, und ein 
            <see cref="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService"/>-Objekt zwar zentriert, sich die Koordinaten aber genau in der Bildmitte befinden. 
            Insbesondere sind davon Bilder betroffen, die als Umgebungsbilder geladen wurden und damit 
            den gleichen Bildbereich wie das entsprechende unzentrierte Bild besitzen.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.Image">
            <summary>Versuch ein Bild im Cach zu finden, auch wenn die Geo-Koordinaten 
            beider <see cref="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService"/>-Objekte nicht übereinstimmen, beide aber auf das gleiche Bild verweisen.</summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService">
            <summary>Prüft nur die Wertgleichheit zweier <see cref="F:GeoUtility.GeoSystem.MapService.Helper.Images.CacheEqualityMode.MapService"/>-Objekte.</summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info">
            <summary><para>Die Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Info"/> enthält Klassen, die Informationen über das aktuelle Satelliten-/Luftbild 
            speichern. Daneben enthält die Klasse sonstige Strukturen, die Steuerungsfunktionalitäten für die 
            <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse zur Verfügung stellen.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel gibt ein Google Maps Satellitenbild direkt an und übergibt es an den
            Konstruktor eines <see cref="T:GeoUtility.GeoSystem.MapService"/> Objektes. Die <see cref="P:GeoUtility.GeoSystem.MapService.Geo">geographischen Koordinaten</see> 
            des <see cref="T:GeoUtility.GeoSystem.MapService"/> Objektes werden dabei auf die Bildmitte gesetzt:
            <code>
            using GeoUtility.GeoSystem;
            MapService.Info.MapServiceGoogleMapsTile tile = new MapService.Info.MapServiceGoogleMapsTile(8800, 5373, 14);
            MapService maps = new MapService(tile);
            </code>
            </example>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase">
            <summary><para>Abstrakte Basisklasse, aus der sich die nachfolgenden Klassen ableiten, um die für jeden
            <see cref="T:GeoUtility.GeoSystem.MapService"/> Dienst unterschiedlichen Satellitenbild Zugriffsdaten zu speichern. Die 
            Basisklasse wird für Boxing/Unboxing benötigt, beispielsweise in einem Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase.URL">
            <summary><para>Ermöglicht den Zugriff auf die URL-Eigenschaft der abgeleiteten Klassen von der Basisklasse aus.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile">
            <summary><para>Die Klasse speichert einen internen generischen Schlüssel, der dazu dient einheitlich für 
            alle <see cref="T:GeoUtility.GeoSystem.MapService"/> Dienste Transformationen durchzuführen. Andernfalls müssten für jeden einzelnen 
            Dienst eigene Transformationsroutinen erstellt werden, was sehr schwer zu warten wäre.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile.#ctor(System.String)">
            <summary><para>Konstruktor mit einem Parameter für den internen generischen Schlüssel.</para></summary>
            <param name="key">Der interne generische Schlüssel.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile.ToString">
            <summary><para>Wird nur verwendet, um eine konsistente Memberstruktur aller <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> beizubehalten.</para></summary>
            <returns>Gibt den internen generische Schlüssel zurück.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile.Key">
            <summary><para>Die Eigenschaft Key gibt den internen generischen Schlüssel zurück, oder legt ihn fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile.URL">
            <summary><para>Wird nur verwendet, um eine konsistente Memberstruktur aller <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceTileBase"/> beizubehalten.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile">
            <summary><para>Die Klasse speichert die Schlüsseldaten, um auf ein Satelliten-/Luftbild des 
            <see cref="T:GeoUtility.GeoSystem.MapService"/> Providers Google Maps zuzugreifen.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary><para>Konstruktor mit den Parametern für die Werte X, Y und Zoom.</para></summary>
            <param name="x">X-Wert des Google Maps Schlüssels.</param>
            <param name="y">Y-Wert des Google Maps Schlüssels.</param>
            <param name="zoom">Zoomstufe des Google Maps Schlüssels.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.ToString">
            <summary><para>Gibt die Google Maps Zugriffsdaten auf das Satelliten-/Luftbild als String aus.</para></summary>
            <returns>Gibt den Google Maps Schlüssel zurück.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.X">
            <summary><para>Die Eigenschaft X gibt den X-Wert des Satellitenbildes zurück, oder legt ihn fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.Y">
            <summary><para>Die Eigenschaft Y gibt den Y-Wert des Satellitenbildes zurück, oder legt ihn fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.Zoom">
            <summary><para>Die Eigenschaft Zoom gibt die Zoomstufe des Satellitenbildes zurück, oder legt die fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile.URL">
            <summary><para>Gibt die vollständige URL für das Satelliten-/Luftbild zum Google Maps Server zurück.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile">
            <summary><para>Die Klasse speichert den Schlüssel, um auf ein Satelliten-/Luftbild des <see cref="T:GeoUtility.GeoSystem.MapService"/> 
            Providers Microsoft Virtual Earth zuzugreifen.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile.#ctor(System.String)">
            <summary><para>Konstruktor mit einem Parameter für den Schlüssel zum Zugriff auf das Satellitenbild.</para></summary>
            <param name="key">Der Schlüssel des Virtual Earth Bildes.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile.ToString">
            <summary><para>Gibt die Virtual Earth Zugriffsdaten auf das Satelliten-/Luftbild als String aus.</para></summary>
            <returns>Gibt den Virtual Earth Schlüssel zurück.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile.Key">
            <summary><para>Die Eigenschaft Key gibt den Schlüssel zurück, oder legt ihn fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile.URL">
            <summary><para>Gibt die vollständige URL für das Satelliten-/Luftbild zum Virtual Earth Server zurück.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile">
            <summary><para>Die Klasse speichert die Schlüsseldaten, um auf ein Satelliten-/Luftbild des <see cref="T:GeoUtility.GeoSystem.MapService"/> 
            Providers Yahoo Maps zuzugreifen.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary><para>Konstruktor mit den Parametern für die Werte X, Y und Zoom.</para></summary>
            <param name="x">X-Wert des Yahoo Maps Schlüssels.</param>
            <param name="y">Y-Wert des Yahoo Maps Schlüssels.</param>
            <param name="zoom">Zoomstufe des Yahoo Maps Schlüssels.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.ToString">
            <summary><para>Gibt die Yahoo Maps Zugriffsdaten auf das Satelliten-/Luftbild als String aus.</para></summary>
            <returns>Gibt den Yahoo Maps Schlüssel zurück.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.X">
            <summary><para>Die Eigenschaft X gibt den X-Wert des Satellitenbildes zurück, oder legt ihn fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.Y">
            <summary><para>Die Eigenschaft Y gibt den Y-Wert des Satellitenbildes zurück, oder legt ihn fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.Zoom">
            <summary><para>Die Eigenschaft Zoom gibt die Zoomstufe des Satellitenbildes zurück, oder legt die fest.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile.URL">
            <summary><para>Gibt die vollständige URL für das Satelliten-/Luftbild zum Yahoo Maps Server zurück.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.TileInfo">
            <summary><para>Die Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/> hält alle verfügbaren Informationen über ein aktuelles Satelliten-/Luftbild, 
            und damit über das <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt, bereit. Diese Klasse kann damit als zentraler Zugangspunkt 
            für Informationen über das aktuelle <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt (bzw. Satellitenbild) angesehen werden. 
            <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/> hält unter anderem Informationen über URLs zum Luftbild der verschiedenen MapService 
            Providern, Dimensionen des Bildes oder Bildpunkten bereit.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.TileInfo.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MapService"/> Klasse und verwendet anschließend die 
            Informationen aus der <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/> Klasse um eine URL von dem Satellitenbild auf dem gewählten <see cref="T:GeoUtility.GeoSystem.MapService"/> zu erhalten: 
            <code>
            using GeoUtility.GeoSystem;
            MapService map = new MapService(new Geographic(8.12345, 50.56789));
            Info.TileInfo info = map.Tile;
            string url = info.URL.GoogleMaps;                        // URL zum Satellitenbild auf dem Server des Dienstes
            </code>
            </example>        
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.Dimension">
            <summary><para>Dimension des aktuellen Satellitenbildes in einer <see cref="T:GeoUtility.GeoSystem.Helper.GeoRect"/>-Klasse.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.GeoPosition">
            <summary><para>Bildpunkt (x,y) auf dem Satellitenbild, der der geographischen Koordinate des <see cref="T:GeoUtility.GeoSystem.MapService"/> Objektes 
            entspricht. Bitte beachten: Der Ursprung (Bildpunkt 0,0) ist links oben auf dem Luftbild.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.InternalMap">
            <summary><para>Interner Schlüssel als Typ <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.GoogleMaps">
            <summary><para>Google Maps Schlüssel als Typ <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.VirtualEarth">
            <summary><para>Virtual Earth Schlüssel als <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.YahooMaps">
            <summary><para>Yahoo Maps  Schlüssel als  <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.Zoom">
            <summary><para>Aktuell für das Satellitenbild bzw. <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objektes verwendete Zoomstufe.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.TileInfo.URL">
            <summary><para>URLs aller MapService Provider zu den Satellitenbildern unter Berücksichtigung der aktuellen Zoomstufe.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServiceURL">
            <summary><para>Hilfsklasse für <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/>. Hält die URLs der aktuell unterstützen 
            <see cref="T:GeoUtility.GeoSystem.MapService"/> Dienste zu den Satellitenbildern.</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.MapService.Info.MapServiceURL.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceURL.GoogleMaps">
            <summary><para>Setzt die URL des aktuellen Satellitenbildes zum Google Maps Server oder gibt sie zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceURL.VirtualEarth">
            <summary><para>Setzt die URL des aktuellen Satellitenbildes zum Virtual Earth Server oder gibt sie zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MapService.Info.MapServiceURL.YahooMaps">
            <summary><para>Setzt die URL des aktuellen Satellitenbildes zum Yahoo Maps Server oder gibt sie zurück.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapServer">
            <summary><para>Auflistung der aktuell unterstützen <see cref="T:GeoUtility.GeoSystem.MapService"/> Dienste.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapServer.GoogleMaps">
            <summary><para>Google Maps</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapServer.VirtualEarth">
            <summary><para>Microsoft Virtual Earth</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapServer.YahooMaps">
            <summary><para>Yahoo Maps</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MapService.Info.MapDirection">
            <summary><para>Auflistung der möglichen Richtungen bei der Bewegung eines Bildes der Funktion <see cref="M:GeoUtility.GeoSystem.MapService.Move(GeoUtility.GeoSystem.MapService.Info.MapDirection,System.Int32,System.Boolean)"/></para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.North">
            <summary><para>Bewegungsrichtung: Norden</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.Northeast">
            <summary><para>Bewegungsrichtung: Nordosten</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.East">
            <summary><para>Bewegungsrichtung: Osten</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.Southeast">
            <summary><para>Bewegungsrichtung: Südosten</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.South">
            <summary><para>Bewegungsrichtung: Süden</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.Southwest">
            <summary><para>Bewegungsrichtung: Südwesten</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.West">
            <summary><para>Bewegungsrichtung: Westen</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.Northwest">
            <summary><para>Bewegungsrichtung: Nordwesten</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.MapService.Info.MapDirection.Center">
            <summary><para>Bewegungsrichtung: Keine</para></summary>
        </member>
        <member name="T:GeoUtility.Transformation">
            <summary><para>
            Die interne Klasse Transformation stellt die Funktionen zur Transformation der verschiedenen Koordinatensysteme
            für alle Klassen zur Verfügung. Diese Klasse ist nicht zur direkten Benutzung vorgesehen. 
            Transformationen sollten über die Typumwandlungsfunktionen der Koordinatensystem-Klassen erfolgen.
            </para></summary>
        </member>
        <member name="M:GeoUtility.Transformation.#ctor">
            <summary><para>Der Standard- Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.Transformation.WGSPixel(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile,System.Int32)">
            <summary><para>Die interne Funktion berechnet den X/Y Bildpunkt auf einem Satellitenbild (Tile), 
            der den geographischen Koordinaten im übergebenen <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt entspricht.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tail">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt.</param>
            <param name="size">Größe des Satellitenbildes (i.d.R. 256 Pixel)</param>
            <returns>Bildpunkt auf dem Satellitenbild als <see cref="T:GeoUtility.GeoSystem.Helper.GeoPoint"/>-Objekt, der den Koordinaten entspricht.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.WGSPixel(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile)">
            <summary><para>Die interne Funktion berechnet den X/Y Bildpunkt auf einem Satellitenbild (Tile), 
            der den geographischen Koordinaten im übergebenen <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt entspricht.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tail">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt.</param>
            <returns>Bildpunkt auf dem Satellitenbild als <see cref="T:GeoUtility.GeoSystem.Helper.GeoPoint"/>-Objekt, der den Koordinaten entspricht.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.WGSUTM(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die Funktion wandelt die geographischen Koordinaten eines <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekts 
            in die Koordinaten eines <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekts um.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.WGSGK(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die Funktion wandelt geographische Koordinaten (Länge/Breite) eines <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objektes 
            in ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger">GaussKrueger</see>-Objekt um.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see>)</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.GKPOD(GeoUtility.GeoSystem.GaussKrueger)">
            <summary><para>Die Funktion wandelt die Koordinaten eines <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objektes 
            in Längen/Breiten-Koordinaten eines <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekts im Potsdam-Datum um. 
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="gauss">Ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt-</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see>).</returns>
        </member>
        <member name="M:GeoUtility.Transformation.WGSIMAP(GeoUtility.GeoSystem.Geographic,System.Int32)">
            <summary><para>Die Funktion berechnet den internen Schlüssel für ein Luftbild, welches zu den Geodaten gehört.</para></summary>
            <remarks><para>Um nicht für die verschiedenen MapService-Dienste jeweils eigene Funktionen anbieten zu müssen, 
            werden alle Berechnungen intern mit einem generischen Schlüssel durchgeführt und später gegebenenfalls 
            in den gewählten MapService-Dienst übersetzt. 
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para>
            </para></remarks>
            
            <param name="geo"><see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see></param>
            <param name="zoom">Zoomlevel 1-21</param>
            <returns>Interner Schlüssel als <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.InternalToGoogle(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile)">
            <summary><para>Die Funktion transformiert den internen generischen Schlüssel den Google Maps Schlüssel.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit dem internen Schlüssel.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.GoogleToInternal(GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile)">
            <summary><para>Die Funktion transformiert den Google Maps Schlüssel in die intern benutzte Repräsentation.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceGoogleMapsTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit dem internen Schlüssel.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.InternalToVirtualEarth(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile)">
            <summary><para>Die Funktion konvertiert den internen generischen Schlüssel in das Virtual Earth Format. 
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit dem internen Schlüssel.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.VirtualEarthToInternal(GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile)">
            <summary><para>Die Funktion konvertiert das Virtual Earth Format in den internen Schlüssel.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceVirtualEarthMapsTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit dem internen Schlüssel.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.InternalToYahoo(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile)">
            <summary><para>Die Funktion konvertiert den internen Schlüssel in das Yahoo Maps Format.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit dem internen Schlüssel.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.YahooToInternal(GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile)">
            <summary><para>Die Funktion konvertiert das Yahoo Maps Format in die interne Repräsentation eines Satellitenbildes. 
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceYahooMapsTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit den Zugriffsdaten auf das Satellitenbild.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.MapMove(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile,GeoUtility.GeoSystem.MapService.Info.MapDirection)">
            <summary><para>Die Funktion berechnet den neuen internen Schlüssel für das Satellitenbild (Tile), 
            welches durch die Verschiebung in die angegebene Richtung ausgewählt wird. Die Funktion wird von der 
            <see cref="T:GeoUtility.GeoSystem.MapService"/>-Klasse verwendet, und sollte nur über deren Methoden verwendet werden.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Interne generische Repräsentation des Schlüssels.</param>
            <param name="dir">Richtung der Verschiebung.</param>
            <returns>Den internen generischen Schlüssel im <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.MapDimension(GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile)">
            <summary><para>Die Funktion berechnet die linke untere Ecke und die Breite und Höhe des 
            aktuellen Satellitenbilds (Tiles) aus dem übergebenen internen Schlüssel.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            
            <param name="tile">Ein <see cref="T:GeoUtility.GeoSystem.MapService.Info.MapServiceInternalMapTile"/>-Objekt mit dem internen generischen Schlüssel.</param>
            <returns>Koordinaten (linke untere Ecke), Größe und Mittelpunkt des Luftbilds.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.WGSPOD(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die Funktion verschiebt das Datum von <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84</see> (international) nach <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam</see> (nur Deutschland).
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
                    
            <param name="geo">Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see>.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.PODWGS(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die Funktion verschiebt das Datum von <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam</see> (nur Deutschland) nach <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84</see> (international).
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="geo">Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see></param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.UTMWGS(GeoUtility.GeoSystem.UTM)">
            <summary><para>Die Funktion wandelt UTM Koordinaten in geographische Koordinaten (Länge/Breite) um.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="utm">Ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.MGRUTM(GeoUtility.GeoSystem.MGRS)">
            <summary><para>Die Funktion wandelt militärische MGRS-Koordinaten (Military Grid Reference System, UTMREF) in UTM-Koordinaten um.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="mgrs">Ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt.</returns>
        </member>
        <member name="M:GeoUtility.Transformation.UTMMGR(GeoUtility.GeoSystem.UTM)">
            <summary><para>Die Funktion wandelt zivile UTM Koordinaten in militärische Koordinaten um.
            <para>Die Funktion ist nur für interne Berechnungen bestimmt.</para></para></summary>
            <remarks><para>
            Hintergründe zum Problem der Koordinatentransformationen sowie entsprechende  mathematische 
            Formeln können den einschlägigen Fachbüchern oder dem Internet entnommen werden.<p/>
            Quellen: 
            Bundesamt für Kartographie und Geodäsie<br/>
            <a href="http://www.bkg.bund.de" target="_blank">http://www.bkg.bund.de</a><br/>
            <a href="http://crs.bkg.bund.de" target="_blank">http://crs.bkg.bund.de</a><br/>
            </para></remarks>
            
            <param name="utm">Ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt (UTMREF/MGRS).</returns>
        </member>
        <member name="T:GeoUtility.Localizer.Message">
            <summary><para>Die interne Klasse holt einen lokalisierten String, die durch eine ID spezifiziert wird, 
            und stellt sie der Bibliothek zur Verfügung.</para></summary>
        </member>
        <member name="M:GeoUtility.Localizer.Message.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.Localizer.Message.#ctor(System.String)">
            <summary><para>Konstruktor mit Parameter für die Message-ID.</para></summary>
            <param name="id">Eine globale Message-ID.</param>
        </member>
        <member name="P:GeoUtility.Localizer.Message.ID">
            <summary><para>Die Eigenschaft legt die Message-ID fest, sofern sie nicht bei der Erzeugung der Klasse übergeben wurde.</para></summary>
        </member>
        <member name="P:GeoUtility.Localizer.Message.Text">
            <summary><para>Die Eigenschaft Text gibt einen lokalisierten String zurück, welche durch die ID-Eigenschaft definiert ist.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Base.Geocentric">
            <summary><para>Abstrakte Basislasse für geozentrische Koordinatensysteme.</para></summary>
            <remarks><para>
            Die Klasse <c>Geocentric</c> beinhaltet Member und Methoden, die für alle <i>geozentrischen Koordinatensysteme</i>
            gleich sind. Die Klassen <b>UTM</b> und <b>MGRS</b> werden von dieser Basisklasse abgeleitet.
            </para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.Geocentric.#ctor">
            <summary><para>Standard-Konstruktor</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.Geocentric.#ctor(System.Int32,System.String,System.Double,System.Double)">
            <summary><para>Ein Konstruktor mit den Parametern für Zone, Band, East und Nordwert.</para></summary>
            
            <param name="zone">Zone</param>
            <param name="band">Band</param>
            <param name="east">East</param>
            <param name="north">North</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.Geocentric.#ctor(System.Int32,System.Double,System.Double,GeoUtility.GeoSystem.Base.Geocentric.Hemisphere)">
            <summary><para>Ein Konstruktor mit den Parametern für Zone, East und Nordwert, sowie Hemisphäre.</para></summary>
            <param name="zone">Zone</param>
            <param name="east">East</param>
            <param name="north">North</param>
            <param name="hem">Hemisphäre: Nord, Süd</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.Geocentric.Format(GeoUtility.GeoSystem.Base.Geocentric.Target)">
            <summary><para>Abstrakte Methode für die Formatierung des Ausgabestrings. 
            Die abgeleiteten Klassen implementieren jeweils unterschiedliche Methoden.</para></summary>
            
            <param name="target">Zu formatierendes Element</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Base.Geocentric.ToLongString">
            <summary><para>Erstellt einen langen Koordinatenstring</para></summary>
            <returns>Zusammengesetzter Koordinaten-String</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.East">
            <summary><para>East-Wert (Ost) des geozentrischen Systems als Datentyp <i>double</i>.</para></summary>
            
            <example>Dieses Beispiel demonstriert die Benutzung der East-Eigenschaft in der UTM Klasse.
            <code>
            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM();
            utm.East = 5678901;
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.North">
            <summary><para>North-Wert (Nord) des geozentrischen Systems als Datentyp <i>double</i>.</para></summary>
            
            <example>Dieses Beispiel demonstriert die Benutzung der North-Eigenschaft in der UTM Klasse.
            <code>
            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM();
            utm.North = 456789;
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.Zone">
            <summary><para>Die Zone Eigenschaft übernimmt den Zonenwert des geozentrischen Systems.</para></summary>
            
            <example>Dieses Beispiel demonstriert die Benutzung der Zone Eigenschaft in einem UTM Objekt.
            <code>
            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM();
            utm.Zone = 32;
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.Band">
            <summary><para>Die Band Eigenschaft übernimmt den Bandwert des geozentrischen Systems.</para></summary>
            
            <example>Dieses Beispiel demonstriert die Benutzung der Band Eigenschaft in einem UTM Objekt.
            <code>
            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM();
            utm.Band = "U";
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.Zoneband">
            <summary><para>Die Eigenschaft <i>Zoneband</i> gibt das Zonenband zurück.</para></summary>
            
            <example>Dieses Beispiel demonstriert die Benutzung der Zoneband Eigenschaft in der UTM Klasse.
            <code>
            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM(32, "U", 5678901, 456789);
            string output = utm.Zoneband;                               // Ausgabe: "32U"
            </code>
            </example>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.EastString">
            <summary><para>Wert East als Datentyp string. Dieser Wert hat keine Auswirkung auf die Berechnung 
            von Koordinaten, sondern wird nur für spezielle Ausgaben benötigt.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.NorthString">
            <summary><para>Wert North als Datentyp string. Dieser Wert hat keine Auswirkung auf die Berechnung 
            von Koordinaten, sondern wird nur für spezielle Ausgaben benötigt.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Base.Geocentric.Precision">
            <summary><para>Bestimmt die Anzahl der Nachkommastellen in der Ausgabe.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Base.Geocentric.Hemisphere">
            <summary><para>Der Hemisphere Enumerator wird in einigen Konstruktoren verwendet.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.Geocentric.Hemisphere.North">
            <summary><para>Nördliche Hemisphäre</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.Geocentric.Hemisphere.South">
            <summary><para>Südliche Hemisphäre</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Base.Geocentric.Target">
            <summary><para>Der Target Enumerator legt fest welcher Wert formatiert werden soll.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.Geocentric.Target.All">
            <summary><para>Formatierung des East- und North-Wertes.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.Geocentric.Target.East">
            <summary><para>Formatierung des East-Wertes.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.Geocentric.Target.North">
            <summary><para>Formatierung des North-Wertes.</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Base.Geocentric.Target.Nothing">
            <summary><para>Kann für MGRS verwendet werden.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.GaussKrueger">
            <summary><para>Definition der <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Koordinaten Klasse.</para></summary>
            <remarks><para>
            Die <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Klasse implementiert Methoden und Eigenschaften für das nur in Deutschland 
            verwendete <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> Koordinatensystem.
            </para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Klasse und weist 
            anschließend neue Werte für den Rechtswert und den Hochwert zu: 
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger();
            gauss.East = 3456789;
            gauss.North = 5612345;
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.#ctor(System.Double,System.Double)">
            <summary><para>Konstruktor mit Parametern für den Rechts- und Hochwert.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Klasse und übergibt
            dabei die Parameter für den Rechtswert und den Hochwert: 
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            </code>
            </example>
            
            <param name="east">Rechtswert</param>
            <param name="north">Hochwert</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ValidRange(GeoUtility.GeoSystem.Geographic)">
            <summary><para>Die statische Methode prüft, ob die Koordinaten des übergebenen <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekts
            in also in Deutschland liegen. Das Gauss-Krüger Koordinatensystem ist nur für Deutschland definiert.</para></summary>
            <param name="geo">Ein gültiges <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt.</param>
            <returns>True, wenn die Koordinaten in Deutschland liegen, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ValidRange(GeoUtility.GeoSystem.Base.BaseSystem)">
            <summary><para>Die statische Methode prüft, ob die Koordinaten des übergebenen <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/>-Objekts
            in also in Deutschland liegen. Das Gauss-Krüger Koordinatensystem ist nur für Deutschland definiert.</para></summary>
            <param name="system">Ein gültiges Objekt einer von <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteten Klasse.</param>
            <returns>True, wenn die Koordinaten in Deutschland liegen, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.TryParse(System.String,System.String,GeoUtility.GeoSystem.GaussKrueger@,System.String@,System.Collections.Generic.Dictionary{System.String,System.Boolean}@)">
            <summary><para>Die statische Methode kann dazu verwendet werden, als String-Werte übergebene Rechts- und Hochwert-Parameter 
            auf ihre Gültigkeit zu überprüfen. Die Methode gibt eine Liste gültiger Parameter, eine Fehlermeldung und 
            ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt zurück. Ist einer der Parameter ungültig, wird ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt 
            mir dem Wert null zurückgegeben.</para></summary>
            <param name="Rechts">Längengrad-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="Hoch">Breitengrad-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="Gauss">Ein gültiges <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt oder null.</param>
            <param name="ErrorMessage">Eine ausführliche Fehlermeldung, falls ein Fehler aufgetreten ist.</param>
            <param name="ValidItems">Ein <see cref="T:System.Collections.Generic.Dictionary`2"/>-Objekt, in dem die gültigen und ungültigen Parameter aufgeführt werden.</param>
            <returns>True, wenn alle Parameter gültig sind, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.Format(System.Double)">
            <summary><para>Die Funktion gibt einen formatierten String des übergebenen double Wertes zurück.</para></summary>
            
            <remarks><para>Diese Funktion ist nur für interne Zwecke bestimmt. Sie wird von den öffentlichen 
            Eigenschaften <see cref="P:GeoUtility.GeoSystem.GaussKrueger.EastString"/> und <see cref="P:GeoUtility.GeoSystem.GaussKrueger.NorthString"/> benutzt. Die Anzahl der Nachkommastellen 
            wird von der Eigenschaft <see cref="P:GeoUtility.GeoSystem.GaussKrueger.Precision"/> festgelegt. Standardmäßig werden keine Nachkommastellen 
            ausgegeben, das heißt die Ausgabe ist <i>metergenau</i>.</para></remarks>
            <param name="value">Koordinate (Double)</param>
            <returns>Formatierte Koordinate entsprechend dem System</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ToString">
            <summary><para>Die Funktion gibt einen String der Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen kurzen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            string output = gauss.ToString()               // Ausgabe: "R: 3456789  H: 5612345"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String der Gauss-Krueger Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ToShortString">
            <summary><para>Die Funktion gibt einen kurzen String der Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen kurzen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            string output = gauss.ToString()               // Ausgabe: "3456789  5612345"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String der Gauss-Krueger Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ToLongString">
            <summary><para>Die Funktion gibt einen kurzen String der <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen langen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            string output = gauss.ToLongString()           // Ausgabe: "Rechts: 3456789; Hoch: 5612345"
            </code>
            </example>
            
            <returns>Zusammengesetzter langer String der <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.op_Explicit(GeoUtility.GeoSystem.GaussKrueger)~GeoUtility.GeoSystem.Geographic">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> 
            nach <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> 
            (Längen-/Breitensystem) Objekt im internationalen <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines Gauss-Krueger Objektes
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            // Typumwandlung in das Längen-/Breiten-Koordinatensystems im WGS84-Datum
            Geographic geo = (Geographic)gauss; 
            </code>
            </example>
            
            <param name="gauss">Das aktuelle <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Länge/Breite, latitude/longitude) im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see></returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.op_Explicit(GeoUtility.GeoSystem.GaussKrueger)~GeoUtility.GeoSystem.UTM">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> nach <see cref="T:GeoUtility.GeoSystem.UTM"/>.</para></summary>
            
            <example>Das folgende Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines Gauss-Krueger Objektes
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            // Typumwandlung in ein UTM Objekt
            UTM utm = (UTM)gauss; 
            </code>
            </example>
            
            <param name="gauss">Das aktuelle <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.op_Explicit(GeoUtility.GeoSystem.GaussKrueger)~GeoUtility.GeoSystem.MGRS">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> nach 
            <see cref="T:GeoUtility.GeoSystem.MGRS"/> (Military Grid Reference System, UTMREF).</para></summary>
            
            <example>Das folgende Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines Gauss-Krueger Objektes
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            // Typumwandlung in ein MGRS Objekt
            MGRS mgrs = (MGRS)gauss; 
            </code>
            </example>
            
            <param name="gauss">Das aktuelle <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.op_Explicit(GeoUtility.GeoSystem.GaussKrueger)~GeoUtility.GeoSystem.MapService">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> 
            in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</para></summary>
            <remarks><para>Das <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt repräsentiert für eine gegebene Koordinate ein dazugehöriges 
            Satelliten- bzw. Luftbild eines zu wählenden MapService Providers. MapService Provider sind 
            Interdienste die Satelliten-/Luftbilder anbieten. Derzeit werden die Anbieter Google Maps, 
            Microsoft Virtual Earth und Yahoo Maps unterstützt.</para></remarks>
            
            <example>Das folgende Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> 
            Objekt mit dem Provider Google Maps und der Zoomstufe 18:
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345); // Erzeugen eines GaussKrueger Objektes
            MapService maps = (MapService)gauss; // Typumwandlung in ein MapService Objekt
            maps.MapServer = MapService.Info.MapServer.GoogleMaps; // enum MapService.Info.MapServer
            maps.Zoom = 18; // zulässige Zoomstufen: 1 (min) bis 21 (max)
            </code>
            </example>
            
            <param name="gauss">Das aktuelle <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ConvertFrom``1(``0)">
            <summary><para>Die generische Methode konvertiert den generischen Typ T in das aktuelle <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in das aktuelle 
            <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.GaussKrueger.ConvertFrom``1(``0)">ConvertFrom&lt;T&gt;(T)</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            GaussKrueger gauss;
            gauss.ConvertFrom&lt;Geographic&gt;(geo);
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <param name="t">Das zu konvertierende Objekt als generischer Parameter.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.ConvertTo``1">
            <summary><para>Die generische Methode konvertiert ein Objekt aus der Basisklasse 
            <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> in ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in ein neues 
            <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.GaussKrueger.ConvertTo``1">ConvertTo&lt;T&gt;</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            GaussKrueger gauss;
            gauss = geo.ConvertTo&lt;GaussKrueger&gt;();
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <returns>Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.MemberwiseClone">
            <summary><para>Erstellt eine flache Kopie des aktuellen Objekts.</para></summary>
            <returns>Ein neues <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>-Objekt als flache Kopie.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtabelle wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein beliebiges Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.op_Equality(GeoUtility.GeoSystem.GaussKrueger,GeoUtility.GeoSystem.GaussKrueger)">
            <summary>Überladener Gleichheitsoperator.</summary>
            <param name="gaussA">Das erste zu vergleichende Objekt.</param>
            <param name="gaussB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen Werte haben. False, wenn die Werte nicht gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.GaussKrueger.op_Inequality(GeoUtility.GeoSystem.GaussKrueger,GeoUtility.GeoSystem.GaussKrueger)">
            <summary>Überladener Ungleichheitsoperator.</summary>
            <param name="gaussA">Das erste zu vergleichende Objekt.</param>
            <param name="gaussB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte mindestens einen unterschiedlichen Wert haben. False, wenn alle Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.GaussKrueger.East">
            <summary><para>Die öffentliche Eigenschaft <i>East</i> speichert den Rechtswert, oder 
            gibt ihn als Datentyp <i>double</i> zurück. Beispiel siehe auch <see cref="M:GeoUtility.GeoSystem.GaussKrueger.#ctor(System.Double,System.Double)"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.GaussKrueger.North">
            <summary><para>Die öffentliche Eigenschaft <i>North</i> speichert den Hochwert, oder 
            gibt ihn als Datentyp <i>double</i> zurück. Beispiel siehe auch <see cref="M:GeoUtility.GeoSystem.GaussKrueger.#ctor(System.Double,System.Double)"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.GaussKrueger.EastString">
            <summary><para>Die öffentliche Eigenschaft <i>EastString</i> gibt den Rechtswert als formatierten Wert vom
            Datentyp <i>string</i> zurück. Beispiel siehe auch <see cref="M:GeoUtility.GeoSystem.GaussKrueger.#ctor(System.Double,System.Double)"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.GaussKrueger.NorthString">
            <summary><para>Die öffentliche Eigenschaft <i>NorthString</i> gibt den Hochwert als formatierten Wert vom
            Datentyp <i>string</i> zurück. Beispiel siehe auch <see cref="M:GeoUtility.GeoSystem.GaussKrueger.#ctor(System.Double,System.Double)"/>.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.GaussKrueger.Precision">
            <summary><para>Bestimmt die Anzahl der Nachkommastellen in der formatierten Ausgabe.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.GaussKrueger.isEmpty">
            <summary><para>Prüft ob bereits Koordinatenwerte gesetzt wurden.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Geographic">
            <summary><para>Definition der <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Klasse (Längen-/Breiten-System).</para></summary>
            <remarks><para>
            Die <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Klasse implementiert Methoden und Eigenschaften für das 
            Längen-/Breiten-Koordinatensystem (longitude/latitude) im internationalen 
            <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>.
            </para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Klasse und weist 
            anschließend neue Werte für den Längen- und Breitengrad zu:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic();
            geo.Longitude = 8.12345;    // Längengrad
            geo.Latitude = 50.56789;    // Breitengrad
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.#ctor(System.Double,System.Double)">
            <summary><para>Konstruktor mit Parametern für den Längen- und Breitengrad.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Klasse und übergibt
            dabei die Parameter für den Längen- und Breitengrad: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            </code>
            </example>
            
            <param name="lon">Geographische Länge (<see cref="P:GeoUtility.GeoSystem.Geographic.Longitude"/>) in Dezimalgrad.</param>
            <param name="lat">Geographische Breite (<see cref="P:GeoUtility.GeoSystem.Geographic.Latitude"/>) in Dezimalgrad.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.#ctor(System.Double,System.Double,GeoUtility.GeoSystem.Helper.GeoDatum)">
            <summary><para>Konstruktor mit Parametern für den Längen- und Breitengrad und das 
            <see cref="T:GeoUtility.GeoSystem.Helper.GeoDatum">Datum</see>.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der GeoUtility.GeoSystem.Helper Klasse und übergibt
            dabei die Parameter für den <see cref="P:GeoUtility.GeoSystem.Geographic.Longitude">Längengrad</see> und den <see cref="P:GeoUtility.GeoSystem.Geographic.Latitude">Breitengrad</see> 
            und das <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see> (nur Deutschland). 
            Achtung: International wird üblicherweise wird das 
            <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see> verwendet: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789, GeoDatum.Potsdam);
            </code>
            </example>
            
            <param name="lon">Geographische Länge ((<see cref="P:GeoUtility.GeoSystem.Geographic.Longitude"/>) in Dezimalgrad.</param>
            <param name="lat">Geographische Breite (<see cref="P:GeoUtility.GeoSystem.Geographic.Latitude"/>) in Dezimalgrad.</param>
            <param name="datum">Geodätisches Datum (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84"/> oder <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam"/>).</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.TryParse(System.String,System.String,GeoUtility.GeoSystem.Geographic@,System.String@,System.Collections.Generic.Dictionary{System.String,System.Boolean}@)">
            <summary><para>Die statische Methode kann dazu verwendet werden, als String-Werte übergebene Längen-/Breitengrad-Parameter 
            auf ihre Gültigkeit zu überprüfen. Die Methode gibt eine Liste gültiger Parameter, eine Fehlermeldung und 
            ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt zurück. Ist einer der Parameter ungültig, wird ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt 
            mir dem Wert null zurückgegeben.</para></summary>
            <param name="Lon">Längengrad-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="Lat">Breitengrad-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="Geograph">Ein gültiges <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt oder null.</param>
            <param name="ErrorMessage">Eine ausführliche Fehlermeldung, falls ein Fehler aufgetreten ist.</param>
            <param name="ValidItems">Ein <see cref="T:System.Collections.Generic.Dictionary`2"/>-Objekt, in dem die gültigen und ungültigen Parameter aufgeführt werden.</param>
            <returns>True, wenn alle Parameter gültig sind, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.SetDatum(GeoUtility.GeoSystem.Helper.GeoDatum)">
            <summary><para>Die Funktion verschiebt das aktuelle <see cref="T:GeoUtility.GeoSystem.Helper.GeoDatum">geodätische Datum</see>. 
            Mögliche Werte sind: <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84</see> (Standard, international) oder 
            <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see>.</para></summary>
            
            <example>Das folgende Beispiel berechnet die neuen Koordinatenwerte, die sich durch 
            das Setzen des geodätischen Datums vom initialen (internationalen) Datum 
            <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84</see> in das nur in 
            Deutschland verwendete <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see> ändern. 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789, GeoDatum.WGS84); // initial WGS84
            geo.SetDatum(GeoDatum.Potsdam);                                     // neues Datum
            </code>
            </example>
            
            <param name="datum">Das neu zu setzende <see cref="T:GeoUtility.GeoSystem.Helper.GeoDatum">geodätische Datum</see>.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.Format(System.Double)">
            <summary><para>Gibt die Koordinate in einem landesspezifischen Format aus. Die Funktion wird von der
            Eigenschaft <see cref="P:GeoUtility.GeoSystem.Geographic.LonString"/> und <see cref="P:GeoUtility.GeoSystem.Geographic.LatString"/> verwendet. 
            Die Funktion ist nur für den internen Gebrauch bestimmt.</para></summary>
            
            <param name="value">Koordinate als Datentyp double</param>
            <returns>Landesspezifisch formatierte Koordinate als Datentyp string.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.ToString">
            <summary><para>Erstellt einen kurzen geographischen Koordinaten-String.</para></summary>
            
            <example>Das folgende Beispiel zeigt eine Ausgebe der Methode: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); 
            geo.ToString();                                     // Ausgabe: "8.12345; 50.56789"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer geographischer Koordinaten-String</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.ToLongString">
            <summary><para>Erstellt einen langen geographischen Koordinaten-String mit Datum.</para></summary>
            
            <example>Das folgende Beispiel zeigt eine Ausgebe der Methode: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); 
            geo.ToLongString();                                     // Ausgabe: "Länge: 8.12345; Breite: 50.56789 (WGS84)"
            </code>
            </example>
            
            <returns>Zusammengesetzter langer geographischer Koordinaten-String</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.ToSexagesimalString">
            <summary><para>Erstellt einen langen geographischen Koordinaten-String mit Datum.</para></summary>
            
            <example>Das folgende Beispiel zeigt eine Ausgebe der Methode: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); 
            geo.ToSexagesimalString();
            </code>
            </example>
            
            <returns>Zusammengesetzter langer geographischer Koordinaten-String im <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal"/>-Format.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.ToHybridString">
            <summary><para>Erstellt einen geographischen Koordinaten-String mit Dezimal- und Sexagesimalkoordinaten.</para></summary>
            
            <example>Das folgende Beispiel zeigt eine Ausgebe der Methode: 
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); 
            geo.ToHybridString();
            </code>
            </example>
            
            <returns>Zusammengesetzter geographischer Koordinaten-String mit Dezimal- und Sexagesimalkoordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.op_Explicit(GeoUtility.GeoSystem.Geographic)~GeoUtility.GeoSystem.GaussKrueger">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.Geographic"/> nach 
            <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see>. Eine eventuell notwendige Berechnung der Verschiebung 
            vom <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see> in das 
            <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see> erfolgt automatisch.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt (Längen-/Breitensystem) in ein 
            <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Object:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); // Erzeugen eines Geographic Objektes
            GaussKrueger gauss = (GaussKrueger)geo;           // Typumwandlung in ein GaussKrueger Objekt
            </code>
            </example>
            
            <param name="geo">Zu konvertierendes geographisches Objekt vom Typ <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</param>
            <returns>Das neue <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.op_Explicit(GeoUtility.GeoSystem.Geographic)~GeoUtility.GeoSystem.UTM">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.Geographic"/> nach <see cref="T:GeoUtility.GeoSystem.UTM"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitensystem) in ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Object:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); // Erzeugen eines Geographic Objektes
            UTM utm = (UTM)geo;                                 // Typumwandlung in ein UTM Objekt
            </code>
            </example>
            
            <param name="geo">Zu konvertierendes geographisches Objekt vom Typ <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</param>
            <returns>Das neue <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.op_Explicit(GeoUtility.GeoSystem.Geographic)~GeoUtility.GeoSystem.MGRS">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.Geographic"/> nach 
            <see cref="T:GeoUtility.GeoSystem.MGRS"/> (Military Grid Reference System, UTMREF).</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitensystem) in ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Object:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789); // Erzeugen eines Geographic Objektes
            MGRS mgrs = (MGRS)geo;                              // Typumwandlung in ein MGRS Objekt
            </code>
            </example>
            
            <param name="geo">Zu konvertierendes geographisches Objekt vom Typ <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</param>
            <returns>Das neue <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.op_Explicit(GeoUtility.GeoSystem.Geographic)~GeoUtility.GeoSystem.MapService">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.Geographic"/> in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</para></summary>
            
            <remarks><para>Das <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt repräsentiert für eine gegebene Koordinate ein dazugehöriges 
            Satelliten- bzw. Luftbild eines zu wählenden MapService Providers. MapService Provider sind 
            Interdienste die Satelliten-/Luftbilder anbieten. Derzeit werden die Anbieter Google Maps, 
            Microsoft Virtual Earth und Yahoo Maps unterstützt.</para></remarks>
            <example>Das folgende Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objekt 
            mit dem Provider Google Maps und der Zoomstufe 18:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);     // Erzeugen eines Geographic Objektes
            MapService maps = (MapService)geo;                      // Typumwandlung in ein MapService Objekt
            maps.MapServer = MapService.Info.MapServer.GoogleMaps;  // enum MapService.Info.MapServer
            maps.Zoom = 18;                                         // zulässige Zoomstufen: 1 (min) bis 21 (max)
            </code>
            </example>
            
            <param name="geo">Zu konvertierendes geographisches Objekt vom Typ <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</param>
            <returns>Das neue <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.ConvertFrom``1(``0)">
            <summary><para>Die generische Methode konvertiert den generischen Typ T in das aktuelle 
            <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt in das aktuelle 
            <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.Geographic.ConvertFrom``1(``0)">ConvertFrom&lt;T&gt;(T)</see>:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 478123, 5629123);
            Geographic geo;
            geo.ConvertFrom&lt;UTM&gt;(utm);
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <param name="t">Das zu konvertierende Objekt als generischer Parameter.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.ConvertTo``1">
            <summary><para>Die generische Methode konvertiert ein Objekt aus der Basisklasse 
            <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> in ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> 
            Objekt in ein neues <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.Geographic.ConvertTo``1">ConvertTo&lt;T&gt;</see>:
            <code>
            using GeoUtility.GeoSystem;
            GaussKrueger gauss = new GaussKrueger(3456789, 5612345);
            Geographic geo;
            geo = gauss.ConvertTo&lt;Geographic&gt;();
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <returns>Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.MemberwiseClone">
            <summary><para>Erstellt eine flache Kopie des aktuellen Objekts.</para></summary>
            <returns>Ein neues <see cref="T:GeoUtility.GeoSystem.Geographic"/>-Objekt als flache Kopie.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtabelle wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein beliebiges Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.op_Equality(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.Geographic)">
            <summary>Überladener Gleichheitsoperator.</summary>
            <param name="geoA">Das erste zu vergleichende Objekt.</param>
            <param name="geoB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen Werte haben. False, wenn die Werte nicht gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Geographic.op_Inequality(GeoUtility.GeoSystem.Geographic,GeoUtility.GeoSystem.Geographic)">
            <summary>Überladener Ungleichheitsoperator.</summary>
            <param name="geoA">Das erste zu vergleichende Objekt.</param>
            <param name="geoB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte mindestens einen unterschiedlichen Wert haben. False, wenn alle Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.Longitude">
            <summary><para>Gibt die geographische Länge (Longitude) als Datentyp <i>double</i> zurück oder setzt den Wert.</para></summary>
            <remarks><para>Beispiel siehe <see cref="M:GeoUtility.GeoSystem.Geographic.#ctor">Standard-Konstruktor</see>.</para></remarks>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.Latitude">
            <summary><para>Gibt die geographische Breite (Latitude) als Datentyp <i>double</i> zurück oder setzt den Wert.</para></summary>
            <remarks><para>Beispiel siehe <see cref="M:GeoUtility.GeoSystem.Geographic.#ctor">Standard-Konstruktor</see>.</para></remarks>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.LonString">
            <summary><para>Gibt die geographische Länge (Longitude) als Datentyp <i>string</i> zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.LatString">
            <summary><para>Gibt die geographische Breite (Latitude) als Datentyp <i>string</i> zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.LonSexagesimal">
            <summary><para>Gibt ein <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal">Sexagesimal</see> Objekt (Grad/Minute/Sekunde) 
            für die geographische Länge (Longitude) zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.LatSexagesimal">
            <summary><para>Gibt ein <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal">Sexagesimal</see> Objekt (Grad/Minute/Sekunde) 
            für die geographische Breite (Latitude) zurück.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.Datum">
            <summary><para>Gibt das aktuelle geodätische Datum (WGS84 oder Potsdam) zurück. 
            Standard ist das <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see> (World Geodetic System 1984).</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Geographic.isEmpty">
            <summary><para>Prüft ob bereits Koordinatenwerte gesetzt wurden.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Helper.GeoDatum">
            <summary><para>Enumeration Geodatum: <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84"/> (International), 
            <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see> (nur Deutschland)</para></summary>
            <remarks><para>
            Wird eine Koordinatentransformation in <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> 
            Koordinatensystem durchgeführt, so müssen die Koordinaten des <see cref="T:GeoUtility.GeoSystem.Geographic">Längen-/Breitensystems</see> 
            im <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see> vorliegen. Alle anderen Systeme benutzen das Datum WGS84. 
            Bei der Transformation eines Koordinatensystems in das <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> 
            System müssen die Koordinaten also in das <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see> 
            gebracht werden. Dies geschieht jedoch normalerweise bei der Typkonvertierung automatisch. 
            <para>Hintergründe dazu siehe auch den Wikipedia-Artikel <i>Geodätisches Datum</i> unter dem Link: <br/>
            <a href="http://de.wikipedia.org/wiki/Geod%C3%A4tisches_Datum" target="_blank">http://de.wikipedia.org/wiki/Geod%C3%A4tisches_Datum</a></para>
            </para></remarks>
            <seealso cref="M:GeoUtility.GeoSystem.Geographic.SetDatum(GeoUtility.GeoSystem.Helper.GeoDatum)"/>
            
            <example>Dieses Beispiel zeigt das explizite Setzen des Datums bei einer Konvertierung von einem
            <see cref="T:GeoUtility.GeoSystem.Geographic">Längen-/Breitensystem</see> in ein 
            <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger-System</see>. <para>Bitte beachten: Das Setzen 
            des Datums geschieht bei der Typkonvertierung automatisch, ist also nicht erforderlich. Bei der Rückkonvertierung 
            von <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see> in das Längen-Breiten-System, wird 
            automatisch das geodätische Datum <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84"/> gesetzt.</para>
            <code>
            GeoUtility.GeoSystem.Geographic geo = new GeoUtility.GeoSystem.Geographic(8.12345, 50.54321);
            geo.SetDatum(GeoDatum.Potsdam)
            GeoUtility.GeoSystem.GaussKrueger gk = (GeoUtility.GeoSystem.GaussKrueger)geo;
            </code>
            </example>
        </member>
        <member name="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">
            <summary><para>Geodätisches Datum <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84"/> (International)</para></summary>
        </member>
        <member name="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">
            <summary><para>Geodätisches Datum <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam"/> (nur für Deutschland gültig)</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Helper.GeoPoint">
            <summary><para>Einfache Point Klasse.</para></summary>
            <remarks><para>Die Struktur wird von der Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/>
            und der Klasse <see cref="T:GeoUtility.Transformation"/> verwendet, um Bildpunkte eines 
            Satelliten-/Luftbildes (Tiles) in Koordinaten umzuwandeln.</para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoPoint.#ctor(System.Int32,System.Int32)">
            <summary><para>Ein Konstruktor mit Parametern für die Pixelangabe (x,y)</para></summary>
            <param name="x">X-Koordinate: Bildpunkt nach rechts</param>
            <param name="y">Y-Koordinate: Bildpunkt nach unten</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoPoint.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtable wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoPoint.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein GeoPoint-Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoPoint.op_Equality(GeoUtility.GeoSystem.Helper.GeoPoint,GeoUtility.GeoSystem.Helper.GeoPoint)">
            <summary>Überladener Gleichheitsoperator. Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="pointA">Ein GeoPoint-Objekt.</param>
            <param name="pointB">Ein weiteres GeoPoint-Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen X/Y-Werte haben. False, wenn nicht beide Werte gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoPoint.op_Inequality(GeoUtility.GeoSystem.Helper.GeoPoint,GeoUtility.GeoSystem.Helper.GeoPoint)">
            <summary>Überladener Ungleichheitsoperator. Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="pointA">Ein GeoPoint-Objekt.</param>
            <param name="pointB">Ein weiteres GeoPoint-Objekt.</param>
            <returns>True, wenn beide Objekte nicht die gleichen X/Y-Werte haben. False, wenn beide Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoPoint.X">
            <summary><para>Bildpunkt nach rechts</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoPoint.Y">
            <summary><para>Bildpunkt nach unten</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Helper.GeoRect">
            <summary><para>Einfache Rechteck Struktur für Satellitenbilder eines <see cref="T:GeoUtility.GeoSystem.MapService"/>-Objektes.</para></summary>
            <remarks><para>Die Struktur wird von der Klasse <see cref="T:GeoUtility.GeoSystem.MapService.Info.TileInfo"/>
             und anderen Klassen implementiert, vorwiegend um die Dimension und andere Informationen 
             eines Satellitenbildes festzuhalten.</para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary><para>Ein Konstruktor mit Parametern für geographische Koordinaten.</para></summary>
            <param name="lon">Geographische Länge (Longitude)</param>
            <param name="lat">Geographische Breite (Latitude)</param>
            <param name="width">Breite eines Satellitenbildes in Grad</param>
            <param name="height">Höhe eines Satellitenbildes in Grad</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoRect.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtabelle wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoRect.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein GeoRect-Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoRect.op_Equality(GeoUtility.GeoSystem.Helper.GeoRect,GeoUtility.GeoSystem.Helper.GeoRect)">
            <summary>Überladener Gleichheitsoperator. Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="rectA">Ein GeoRect-Objekt.</param>
            <param name="rectB">Ein zweites GeoRect-Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen Werte haben. False, wenn die Werte nicht gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.GeoRect.op_Inequality(GeoUtility.GeoSystem.Helper.GeoRect,GeoUtility.GeoSystem.Helper.GeoRect)">
            <summary>Überladener Ungleichheitsoperator. Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="rectA">Ein GeoRect-Objekt.</param>
            <param name="rectB">Ein zweites GeoRect-Objekt.</param>
            <returns>True, wenn beide Objekte nicht die gleichen Werte haben. False, wenn die Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoRect.Longitude">
            <summary><para>Geographische Länge (Longitude)</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoRect.Latitude">
            <summary><para>Geographische Breite (Latitude)</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoRect.Width">
            <summary><para>Breite eines Satellitenbildes in Grad</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoRect.Height">
            <summary><para>Höhe eines Satellitenbildes in Grad</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoRect.LonCenter">
            <summary><para>Geographische Länge in der Mitte eines Satellitenbildes</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.GeoRect.LatCenter">
            <summary><para>Geographische Breite in der Mitte eines Satellitenbildes</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.Helper.Sexagesimal">
            <summary><para>Die Klasse <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal"/> hält Koordinaten im Sexagesimal-Format, d.h. Grad/Bogenminuten/Bogensekunden und Tertien bzw. 
            Millisekunden.<para>Siehe auch den Wikipedia-Artikel unter der Adresse 
            <a href="http://de.wikipedia.org/wiki/Grad_(Winkel)" target="_blank">http://de.wikipedia.org/wiki/Grad_(Winkel)</a>.</para></para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.Sexagesimal.#ctor">
            <summary><para>Standard Konstruktor</para></summary>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.Sexagesimal.#ctor(System.Double)">
            <summary><para>Konstruktor mit Dezimalgrad Parameter.</para></summary>
            <param name="dec">Dezimalgrad</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.Sexagesimal.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary><para>Konstruktor mit Grad/Minuten/Sekunden/Tertien Parametern.</para></summary>
            <param name="degree">Grad</param>
            <param name="minutes">Minuten</param>
            <param name="seconds">Sekunden</param>
            <param name="thirds">Tertien (1/60 Sekunden). Nur selten verwendet.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.Sexagesimal.#ctor(System.Int32,System.Int32,System.Double)">
            <summary><para>Konstruktor mit Grad/Minuten/Sekunden/Millisekunden Parametern.</para></summary>
            <param name="degree">Grad</param>
            <param name="minutes">Minuten</param>
            <param name="seconds">Sekunden als Dezimalwert</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.Sexagesimal.ToDecimal">
            <summary><para>Die Funktion wandelt das <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal"/> Format in Dezimalgrad um.</para></summary>
            <returns>Gibt den <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal"/>-Wert als Dezimalwert zurück.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.Helper.Sexagesimal.ToString">
            <summary><para>Die Funktion wandelt das <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal"/> Format in Dezimalgrad um.</para></summary>
            <returns>Gibt den <see cref="T:GeoUtility.GeoSystem.Helper.Sexagesimal"/>-Wert als Dezimalwert zurück.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.Sexagesimal.Degree">
            <summary><para>Grad</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.Sexagesimal.Minutes">
            <summary><para>Minuten</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.Sexagesimal.Seconds">
            <summary><para>Sekunden</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.Sexagesimal.Thirds">
            <summary><para>Tertien (1/60 Sekunden). Sie werden jedoch nur selten verwendet.</para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.Helper.Sexagesimal.Millisec">
            <summary><para>Millisekunden</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.MGRS">
            <summary><para>MGRS Koordinaten, von der Basisklasse Geocentric abgeleitet.</para></summary>
            <remarks><para>
            Die <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Klasse implementiert Methoden und Eigenschaften für das in der NATO  
            verwendete MGRS (Military Grid Reference System, UTMREF).
            </para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Klasse und weist 
            anschließend neue Werte für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>, <see cref="P:GeoUtility.GeoSystem.MGRS.Grid"/>, 
            <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/> und <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/> zu: 
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS();
            mgrs.Zone = 32;
            mgrs.Band = "U";
            mgrs.Grid = "MA";
            mgrs.East = 12345;
            mgrs.North = 67890;
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.#ctor(System.String)">
            <summary><para>Konstruktor mit zusammengesetzter MGRS Koordinate.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Klasse und übergibt als Parameter
            eine zusammengesetzte MGRS Koordinate:
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS("32UMA1234567890");
            </code>
            </example>
            
            <param name="mgrs">Zusammengesetze MGRS Koordinate (z. B. 32UMN1234567890)</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.#ctor(System.Int32,System.String,System.String,System.Double,System.Double)">
            <summary><para>Konstruktor mit Parametern für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>, 
            <see cref="P:GeoUtility.GeoSystem.MGRS.Grid"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/> und <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/>.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Klasse und übergibt als Parameter 
            die Werte für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>, <see cref="P:GeoUtility.GeoSystem.MGRS.Grid"/>, 
            <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/> und <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/>: 
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", "MA", 12345, 67890);
            </code>
            </example>
            
            <param name="zone">Zone</param>
            <param name="band">Band</param>
            <param name="grid">Planquadrat</param>
            <param name="east">East Wert</param>
            <param name="north">North Wert</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.TryParse(System.String,GeoUtility.GeoSystem.MGRS@,System.String@)">
            <summary><para>Die statische Methode kann dazu verwendet werden, einen zusammengesetzten MGRS-String 
            auf seine Gültigkeit zu überprüfen. eine Fehlermeldung und 
            ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt zurück. Ist einer der Parameter ungültig, wird ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt 
            mir dem Wert null zurückgegeben.</para></summary>
            <param name="mstring">MGRS Koordinatenstring als Typ <see cref="T:System.String"/>.</param>
            <param name="Mgrs">Ein gültiges <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt oder null.</param>
            <param name="ErrorMessage">Eine ausführliche Fehlermeldung, falls ein Fehler aufgetreten ist.</param>
            <returns>True, wenn alle Parameter gültig sind, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.TryParse(System.String,System.String,System.String,System.String,System.String,GeoUtility.GeoSystem.MGRS@,System.String@,System.Collections.Generic.Dictionary{System.String,System.Boolean}@)">
            <summary><para>Die statische Methode kann dazu verwendet werden, als String-Werte übergebene MGRS Parameter 
            auf ihre Gültigkeit zu überprüfen. Die Methode gibt eine Liste gültiger Parameter, eine Fehlermeldung und 
            ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt zurück. Ist einer der Parameter ungültig, wird ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt 
            mir dem Wert null zurückgegeben.</para></summary>
            <param name="Zone">Zone als Typ <see cref="T:System.String"/>.</param>
            <param name="Band">Band als Typ <see cref="T:System.String"/>.</param>
            <param name="Grid">Band als Typ <see cref="T:System.String"/>.</param>
            <param name="East">East-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="North">North-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="Mgrs">Ein gültiges <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt oder null.</param>
            <param name="ErrorMessage">Eine ausführliche Fehlermeldung, falls ein Fehler aufgetreten ist.</param>
            <param name="ValidItems">Ein <see cref="T:System.Collections.Generic.Dictionary`2"/>-Objekt, in dem die gültigen und ungültigen Parameter aufgeführt werden.</param>
            <returns>True, wenn alle Parameter gültig sind, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.Format(GeoUtility.GeoSystem.Base.Geocentric.Target)">
            <summary><para>Die Funktion gleicht die Länge der East- und North-Koordinate an. Im MGRS müssen beide Werte 
            die gleiche Länge haben, um in einem zusammengesetzten Koordinatenstring korrekt interpretiert werden zu können.</para></summary>
            <remarks><para>Die genaue Länge ist nicht festgelegt, sondern richtet sich nach der Anzahl der gemeinsamen Nullstellen. 
            Die maximale Länge beträgt 5 Ziffern je East-/North-Wert.
            <para>Diese Funktion ist nur für interne Zwecke bestimmt.</para></para></remarks>
            
            <param name="target">In MGRS fix Target.All</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.ToString">
            <summary><para>Die Funktion gibt einen kurzen String der MGRS Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen kurzen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS(32, "U", "MA", 12345, 67890);
            string output = utm.ToString()                                         // Ausgabe: "32UMA1234567890"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String der MGRS Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.ToLongString">
            <summary><para>Die Funktion gibt einen langen String der MGRS Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen langen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS(32, "U", "MA", 12345, 67890);
            string output = mgrs.ToLongString()                                    // Ausgabe: "32U MA 12345 67890"
            </code>
            </example>
            
            <returns>Zusammengesetzter langer String der MGRS Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.op_Explicit(GeoUtility.GeoSystem.MGRS)~GeoUtility.GeoSystem.UTM">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MGRS"/> nach <see cref="T:GeoUtility.GeoSystem.UTM"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines MGRS Objektes
            MGRS mgrs = new MGRS(32, "U", "MA", 12345, 67890);
            // Typumwandlung in ein UTM Objekt
            UTM utm = (UTM)mgrs; 
            </code>
            </example>
            
            <param name="mgrs">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.op_Explicit(GeoUtility.GeoSystem.MGRS)~GeoUtility.GeoSystem.Geographic">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MGRS"/> nach <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines MGRS Objektes
            MGRS mgrs = new MGRS(32, "U", "MA", 12345, 67890);
            // Typumwandlung in ein Geographic Objekt
            Geographic geo = (Geographic)mgrs; 
            </code>
            </example>
            
            <param name="mgrs">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitengrad, WGS84).</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.op_Explicit(GeoUtility.GeoSystem.MGRS)~GeoUtility.GeoSystem.GaussKrueger">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MGRS"/> nach <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines MGRS Objektes
            MGRS mgrs = new MGRS(32, "U", "MA", 12345, 67890);
            // Typumwandlung in ein GaussKrueger Objekt
            GaussKrueger gauss = (GaussKrueger)mgrs; 
            </code>
            </example>
            
            <param name="mgrs">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt (<see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.Potsdam">Potsdam-Datum</see>).</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.op_Explicit(GeoUtility.GeoSystem.MGRS)~GeoUtility.GeoSystem.MapService">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.MGRS"/> in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</para></summary>
            <remarks><para>Das <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt repräsentiert für eine gegebene Koordinate ein dazugehöriges 
            Satelliten- bzw. Luftbild eines zu wählenden MapService Providers. MapService Provider sind 
            Interdienste die Satelliten-/Luftbilder anbieten. Derzeit werden die Anbieter Google Maps, 
            Microsoft Virtual Earth und Yahoo Maps unterstützt. </para></remarks>
            
            <example>Das folgende Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt mit dem 
            Provider Google Maps und der Zoomstufe 18:
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS(32, "U", "MA", 12345, 67890);      // Erzeugen eines MGRS Objektes
            MapService maps = (MapService)mgrs;                     // Typumwandlung in ein MapService Objekt
            maps.MapServer = MapService.Info.MapServer.GoogleMaps;  // enum MapService.Info.MapServer
            maps.Zoom = 18;                                         // zulässige Zoomstufen: 1 (min) bis 21 (max)
            </code>
            </example>
            
            <param name="mgrs">Das aktuelle <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.ConvertFrom``1(``0)">
            <summary><para>Die generische Methode konvertiert den generischen Typ T in das aktuelle <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in das aktuelle 
            <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.MGRS.ConvertFrom``1(``0)">ConvertFrom&lt;T&gt;(T)</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MGRS mgrs;
            mgrs.ConvertFrom&lt;Geographic&gt;(geo);
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <param name="t">Das zu konvertierende Objekt als generischer Parameter.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.ConvertTo``1">
            <summary><para>Die generische Methode konvertiert ein Objekt aus der Basisklasse 
            <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> in ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in ein neues 
            <see cref="T:GeoUtility.GeoSystem.MGRS"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.MGRS.ConvertTo``1">ConvertTo&lt;T&gt;</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            MGRS mgrs;
            mgrs = geo.ConvertTo&lt;MGRS&gt;();
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <returns>Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.MemberwiseClone">
            <summary><para>Erstellt eine flache Kopie des aktuellen Objekts.</para></summary>
            <returns>Ein neues <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt als flache Kopie.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtabelle wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein beliebiges Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.op_Equality(GeoUtility.GeoSystem.MGRS,GeoUtility.GeoSystem.MGRS)">
            <summary>Überladener Gleichheitsoperator.</summary>
            <param name="mgrsA">Das erste zu vergleichende Objekt.</param>
            <param name="mgrsB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen Werte haben. False, wenn die Werte nicht gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.MGRS.op_Inequality(GeoUtility.GeoSystem.MGRS,GeoUtility.GeoSystem.MGRS)">
            <summary>Überladener Ungleichheitsoperator.</summary>
            <param name="mgrsA">Das erste zu vergleichende Objekt.</param>
            <param name="mgrsB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte mindestens einen unterschiedlichen Wert haben. False, wenn alle Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.MGRS.Grid">
            <summary><para>Die Eigenschaft Grid legt das Planquadrat im MGRS fest. 
            Beispiel <see cref="M:GeoUtility.GeoSystem.MGRS.#ctor"/></para></summary>
        </member>
        <member name="P:GeoUtility.GeoSystem.MGRS.isEmpty">
            <summary><para>Prüft ob bereits Koordinatenwerte gesetzt wurden.</para></summary>
        </member>
        <member name="T:GeoUtility.GeoSystem.UTM">
            <summary><para>UTM Koordinaten, von der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.Geocentric"/> abgeleitet.</para></summary>
            <remarks><para>
            Die <see cref="T:GeoUtility.GeoSystem.UTM"/>-Klasse implementiert Methoden und Eigenschaften für das international  
            verwendete UTM (Universal Transverse Mercator) Koordinatensystem.
            </para></remarks>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.UTM"/>-Klasse und weist 
            anschließend neue Werte für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>, 
            <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/> und <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/> zu: 
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM();
            utm.Zone = 32;
            utm.Band = "U";
            utm.East = 412345;
            utm.North = 5567890;
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.#ctor(System.Int32,System.String,System.Double,System.Double)">
            <summary><para>Konstruktor mit Parametern für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>, 
            <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/> und <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/>.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der <see cref="T:GeoUtility.GeoSystem.UTM"/>-Klasse und übergibt als Parameter 
            die Werte für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>, 
            <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/> und <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/>: 
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);
            </code>
            </example>
            
            <param name="zone">Zone</param>
            <param name="band">Band</param>
            <param name="east">East Wert</param>
            <param name="north">North Wert</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.#ctor(System.Int32,System.Double,System.Double,GeoUtility.GeoSystem.Base.Geocentric.Hemisphere)">
            <summary><para>Konstruktor mit Parametern für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, 
            <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/> und <see cref="T:GeoUtility.GeoSystem.Base.Geocentric.Hemisphere"/>, 
            ohne <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Band"/>.</para></summary>
            
            <example>Das folgende Beispiel erzeugt eine Instanz der UTM Klasse und übergibt als Parameter 
            die Werte für <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.Zone"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.East"/>, <see cref="P:GeoUtility.GeoSystem.Base.Geocentric.North"/> 
            und <see cref="T:GeoUtility.GeoSystem.Base.Geocentric.Hemisphere"/>. Bitte beachten sie, dass das Band automatisch berechnet wird: 
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, 412345, 5567890, Hemisphere.North);
            </code>
            </example>
            
            <param name="zone">Zone</param>
            <param name="east">East Wert</param>
            <param name="north">North Wert</param>
            <param name="hem">Nördliche oder südliche Hemisphäre</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.TryParse(System.String,System.String,System.String,System.String,GeoUtility.GeoSystem.UTM@,System.String@,System.Collections.Generic.Dictionary{System.String,System.Boolean}@)">
            <summary><para>Die statische Methode kann dazu verwendet werden, als String-Werte übergebene UTM Parameter 
            auf ihre Gültigkeit zu überprüfen. Die Methode gibt eine Liste gültiger Parameter, eine Fehlermeldung und 
            ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt zurück. Ist einer der Parameter ungültig, wird ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt 
            mir dem Wert null zurückgegeben.</para></summary>
            <param name="Zone">Zone als Typ <see cref="T:System.String"/>.</param>
            <param name="Band">Band als Typ <see cref="T:System.String"/>.</param>
            <param name="East">East-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="North">North-Wert als Typ <see cref="T:System.String"/>.</param>
            <param name="Utm">Ein gültiges <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt oder null.</param>
            <param name="ErrorMessage">Eine ausführliche Fehlermeldung, falls ein Fehler aufgetreten ist.</param>
            <param name="ValidItems">Ein <see cref="T:System.Collections.Generic.Dictionary`2"/>-Objekt, in dem die gültigen und ungültigen Parameter aufgeführt werden.</param>
            <returns>True, wenn alle Parameter gültig sind, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.TryParse(System.String,GeoUtility.GeoSystem.UTM@,System.String@,System.Collections.Generic.Dictionary{System.String,System.Boolean}@)">
            <summary><para>Die statische Methode kann dazu verwendet werden, als String-Werte übergebene UTM Parameter 
            auf ihre Gültigkeit zu überprüfen. Die Methode gibt eine Liste gültiger Parameter, eine Fehlermeldung und 
            ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt zurück. Ist einer der Parameter ungültig, wird ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt 
            mir dem Wert null zurückgegeben.</para></summary>
            <param name="UTMString">Vollständige UTM-Koordinate als <see cref="T:System.String"/>-Typ (Bsp.: 32U 312345 4123456 oder 32 U 312345 4123456).</param>
            <param name="Utm">Ein gültiges <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt oder null.</param>
            <param name="ErrorMessage">Eine ausführliche Fehlermeldung, falls ein Fehler aufgetreten ist.</param>
            <param name="ValidItems">Gibt eine Liste der gültigen bzw. ungültigen Parameter zurück.</param>
            <returns>True, wenn der String gültig ist, sonst False.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.Format(GeoUtility.GeoSystem.Base.Geocentric.Target)">
            <summary><para>Die Funktion formatiert die East-Koordinate (6 Ziffern) und die North-Koordinate (7 Ziffern), 
            und schreibt die Werte in die EastString- bzw. NorthString-Eigenschaft der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.Geocentric"/>.
            Diese Funktion ist nur für interne Zwecke bestimmt.</para></summary>
            
            <param name="target">Der Target-Enumerator legt das zu formatierendes Element fest.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ToString">
            <summary><para>Die Funktion gibt einen kurzen String der UTM Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen kurzen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);
            string output = utm.ToString()               // Ausgabe: "32U 412345 5567890"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String der UTM Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ToShortString">
            <summary><para>Die Funktion gibt einen kurzen String mit formatierten UTM Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen kurzen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);
            string output = utm.ToShortString()               // Ausgabe: "32U 412345 5567890"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String mit formatierten UTM Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ToFormatString">
            <summary><para>Die Funktion gibt einen kurzen String mit formatierten UTM Koordinaten zurück. Diese Methode ist 
            veraltet. Bitte benutzen Sie die Methode <see cref="M:GeoUtility.GeoSystem.UTM.ToShortString"/>.</para></summary>
            
            <example>Das folgende Beispiel gibt einen kurzen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);
            string output = utm.ToFormatString()               // Ausgabe: "32U 412345 5567890"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String mit formatierten UTM Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ToLongString">
            <summary><para>Die Funktion gibt einen langen String mit formatierten UTM Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen langen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);
            string output = utm.ToLongString()           // Ausgabe: "32U E 412345 N 5567890"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String mit formatierten UTM Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ToLongFormatString">
            <summary><para>Die Funktion gibt einen langen String mit formatierten UTM Koordinaten zurück.</para></summary>
            
            <example>Das folgende Beispiel gibt einen langen String zurück:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);
            string output = utm.ToLongString()           // Ausgabe: "32U E 412345 N 5567890"
            </code>
            </example>
            
            <returns>Zusammengesetzter kurzer String mit formatierten UTM Koordinaten.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.op_Explicit(GeoUtility.GeoSystem.UTM)~GeoUtility.GeoSystem.MGRS">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.UTM"/> nach <see cref="T:GeoUtility.GeoSystem.MGRS"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> (Military Grid Reference System, UTMREF) Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines UTM Objektes
            UTM utm = new UTM(32, "U", 412345, 5567890);
            // Typumwandlung in ein MGRS Objekt
            MGRS mgrs = (MGRS)utm; 
            </code>
            </example>
            
            <param name="utm">Das aktuelle <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MGRS"/> (Military Grid Reference System, UTMREF) Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.op_Explicit(GeoUtility.GeoSystem.UTM)~GeoUtility.GeoSystem.Geographic">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.UTM"/> nach <see cref="T:GeoUtility.GeoSystem.Geographic"/>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt 
            im internationalen <see cref="F:GeoUtility.GeoSystem.Helper.GeoDatum.WGS84">WGS84-Datum</see>:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines UTM Objektes
            UTM utm = new UTM(32, "U", 412345, 5567890);
            // Typumwandlung in ein Geographic Objekt
            Geographic geo = (Geographic)utm; 
            </code>
            </example>
            
            <param name="utm">Das aktuelle <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt (Längen-/Breitengrad).</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.op_Explicit(GeoUtility.GeoSystem.UTM)~GeoUtility.GeoSystem.GaussKrueger">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.UTM"/> nach <see cref="T:GeoUtility.GeoSystem.GaussKrueger">Gauss-Krüger</see>.</para></summary>
            
            <example>Das Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt:
            <code>
            using GeoUtility.GeoSystem;
            // Erzeugen eines UTM Objektes
            UTM utm = new UTM(32, "U", 412345, 5567890);
            // Typumwandlung in ein GaussKrueger Objekt
            GaussKrueger gauss = (GaussKrueger)utm; 
            </code>
            </example>
            
            <param name="utm">Das aktuelle <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.GaussKrueger"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.op_Explicit(GeoUtility.GeoSystem.UTM)~GeoUtility.GeoSystem.MapService">
            <summary><para>Konvertierungsoperator für die Transformation von <see cref="T:GeoUtility.GeoSystem.UTM"/> in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</para></summary>
            
            <remarks><para>Das <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt repräsentiert für eine gegebene Koordinate ein dazugehöriges 
            Satelliten- bzw. Luftbild eines zu wählenden MapService Providers. MapService Provider sind 
            Interdienste die Satelliten-/Luftbilder anbieten. Derzeit werden die Anbieter Google Maps, 
            Microsoft Virtual Earth und Yahoo Maps unterstützt.</para></remarks>
            <example>Das folgende Beispiel konvertiert ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt in ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt mit dem 
            Provider Google Maps und der Zoomstufe 18:
            <code>
            using GeoUtility.GeoSystem;
            UTM utm = new UTM(32, "U", 412345, 5567890);                // Erzeugen eines UTM Objektes
            MapService maps = (MapService)utm;                          // Typumwandlung in ein MapService Objekt
            maps.MapServer = MapService.Info.MapServer.GoogleMaps;      // enum MapService.Info.MapServer
            maps.Zoom = 18;                                             // zulässige Zoomstufen: 1 (min) bis 21 (max)
            </code>
            </example>
            
            <param name="utm">Das aktuelle <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</param>
            <returns>Ein <see cref="T:GeoUtility.GeoSystem.MapService"/> Objekt.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ConvertFrom``1(``0)">
            <summary><para>Die generische Methode konvertiert den generischen Typ T in das aktuelle <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in das aktuelle 
            <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.UTM.ConvertFrom``1(``0)">ConvertFrom&lt;T&gt;(T)</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            UTM utm;
            utm.ConvertFrom&lt;Geographic&gt;(geo);
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <param name="t">Das zu konvertierende Objekt als generischer Parameter.</param>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.ConvertTo``1">
            <summary><para>Die generische Methode konvertiert ein Objekt aus der Basisklasse 
            <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> in ein <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt.</para></summary>
            
            <example>Das Beispiel konvertiert ein bestehendes <see cref="T:GeoUtility.GeoSystem.Geographic"/> Objekt in ein neues 
            <see cref="T:GeoUtility.GeoSystem.UTM"/> Objekt mit Hilfe der generischen Methode <see cref="M:GeoUtility.GeoSystem.UTM.ConvertTo``1">ConvertTo&lt;T&gt;</see>:
            <code>
            using GeoUtility.GeoSystem;
            Geographic geo = new Geographic(8.12345, 50.56789);
            UTM utm;
            utm = geo.ConvertTo&lt;UTM&gt;();
            </code>
            </example>
            
            <typeparam name="T">Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</typeparam>
            <returns>Ein aus der Basisklasse <see cref="T:GeoUtility.GeoSystem.Base.BaseSystem"/> abgeleiteter Typ.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.MemberwiseClone">
            <summary><para>Erstellt eine flache Kopie des aktuellen Objekts.</para></summary>
            <returns>Ein neues <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt als flache Kopie.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.GetHashCode">
            <summary>Die Funktion wird aus performancegründen implementiert. Das Einfügen in eine Hashtabelle wird durch die die 
            Bereitstellung eines Hashwertes wesentlich beschleunigt.</summary>
            <returns>Ein Hashwert.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.Equals(System.Object)">
            <summary>Die Funktion wird aus performancegründen implementiert.</summary>
            <param name="obj">Ein beliebiges Objekt.</param>
            <returns>Das übergebene Objekt ist gleich oder nicht.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.op_Equality(GeoUtility.GeoSystem.UTM,GeoUtility.GeoSystem.UTM)">
            <summary>Überladener Gleichheitsoperator.</summary>
            <param name="utmA">Das erste zu vergleichende Objekt.</param>
            <param name="utmB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte die gleichen Werte haben. False, wenn die Werte nicht gleich sind.</returns>
        </member>
        <member name="M:GeoUtility.GeoSystem.UTM.op_Inequality(GeoUtility.GeoSystem.UTM,GeoUtility.GeoSystem.UTM)">
            <summary>Überladener Ungleichheitsoperator.</summary>
            <param name="utmA">Das erste zu vergleichende Objekt.</param>
            <param name="utmB">Das zweite zu vergleichende Objekt.</param>
            <returns>True, wenn beide Objekte mindestens einen unterschiedlichen Wert haben. False, wenn alle Werte gleich sind.</returns>
        </member>
        <member name="P:GeoUtility.GeoSystem.UTM.isEmpty">
            <summary><para>Prüft ob bereits Koordinatenwerte gesetzt wurden.</para></summary>
        </member>
        <member name="T:GeoUtility.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_CONVERTFROM">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Eine Typ-Konvertierung zwischen {0} und {1} ist nicht erlaubt. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_GAUSS_EAST">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die Rechtswert außerhalb des für Deutschland definierten Gauss-Krüger-Systems: 
            Geogr. Länge: 5 bis 16 E. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_GAUSS_NORTH">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die Hochwert außerhalb des für Deutschland definierten Gauss-Krüger-Systems: 
            Geogr. Breite: 46 bis 55 N. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_GEO_LATITUDE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Breitengrad ungültig. Definierter Bereich: -80 (Süd) bis +84 (Nord) ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_GEO_LONGITUDE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Längengrad ungültig. Definierter Bereich: -180 (westl.) bis +180 (östl.) ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_GEO2UTM">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die Werte außerhalb des definierten Bereichs im WGS84 Datum: 
            Länge: -180 bis +180 E; Breite: -80 bis +84 N. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_GK_OUT_OF_RANGE">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die Werte außerhalb des für Deutschland definierten Gauss-Krüger-Systems: 
            Länge: 5 bis 16 E; Breite: 46 bis 55 N. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_MAPDIMENSION">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Ungültiger interner Schlüssel für das Satellitenbild. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_MGRS">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Format des MGRS-Koordinatenstrings konnte nicht erkannt werden oder außerhalb des gültigen Bereichs. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_MGRS_EAST">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die East-Wert ungültig.  ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_MGRS_GRID">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Grid-Wert ungültig. Er besteht aus 2 Buchstaben. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_MGRS_NORTH">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die North-Wert ungültig. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_TILE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Ungültige Werte in dem von MapServiceTileBase abgeleiteten Parameter. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_UTM_BAND">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Band ungültig. Definierter Bereich: C bis X (ohne I und O). ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_UTM_EAST">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die East-Wert ungültig. Definierter Bereich: ca. 200000 bis 800000 ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_UTM_NORTH">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Nord-Wert ungültig. Def.-Bereich: ca. 0 bis 9300000 (Nord), ca. 1100000 bis 10000000 (Süd) ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_UTM_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Der UTM-String konnte nicht erkannt werden (Format unbekannt). ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_UTM_ZONE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die {0}{1} ist eine ungültige UTM-Zone. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_ERROR_UTM_ZONE2">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Zone ungültig. Definierter Bereich: 1 bis 60. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_GAUSS_LONG_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Rechts: {0}; Hoch: {1} ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_GAUSS_SHORT_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die R: {0}   H: {1} ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_GEOGRAPHIC_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Länge: {0}; Breite: {1} ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_MS_NO_IMAGE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Satellitenbild in dieser Zoomstufe nicht verfügar. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.DE_NO_ERROR_MESSAGE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Nähere Angaben zum Fehler sind nicht verfügbar. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_CONVERTFROM">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Type conversion between {0} and {1} is not allowed. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_GAUSS_EAST">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die East value out of range for the german Gauss-Krueger-System: 
            Longitude: 5 bis 16 E. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_GAUSS_NORTH">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die North value out of range for the german Gauss-Krueger-System: 
            Latitude: 46 to 55 N. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_GEO_LATITUDE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Latitude invalid. Range: -80 (South) bis +84 (North) ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_GEO_LONGITUDE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Longitude invalid. Range: -180 (westl.) bis +180 (östl.) ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_GEO2UTM">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die Values out of range for UTM: 
            Longitude: -180 to +180 E; Latitude: -80 to +84 N. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_GK_OUT_OF_RANGE">
             <summary>
               Sucht eine lokalisierte Zeichenfolge, die Values out of range for the german Gauss-Krueger-System: 
            Longitude: 5 bis 16 E; Latitude: 46 to 55 N. ähnelt.
             </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_MAPDIMENSION">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Invalid internal key for the satellite picture. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_MGRS">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Format of the MGRS string could not be parsed or out of range. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_MGRS_EAST">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die East value invalid. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_MGRS_GRID">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Grid value invalid. It needs 2 letters. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_MGRS_NORTH">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die North value invalid. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_TILE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Your MapServiceTileBase derived object contains invalid values. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_UTM_BAND">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Band invalid. Range: C to X (without I and O). ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_UTM_EAST">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die East value invalid. Range: approx. 200000 to 800000 ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_UTM_NORTH">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die North value invalid. Range: approx. 0 to 9300000 (North), approx. 1100000 to 10000000 (South) ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_UTM_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die UTM string could not be parsed (format unknown). ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_UTM_ZONE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die {0}{1} is an invalid utm zone. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.ERROR_UTM_ZONE2">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Zone invalid. Range: 1 to 60. ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.GAUSS_LONG_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die East: {0}; North: {1} ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.GAUSS_SHORT_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die E {0}   N {1} ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.GEOGRAPHIC_STRING">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Longitude: {0}; Latitude: {1} ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.MS_NO_IMAGE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Satellite picture with this zoom level not available . ähnelt.
            </summary>
        </member>
        <member name="P:GeoUtility.Properties.Resources.NO_ERROR_MESSAGE">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die There are no error details available. ähnelt.
            </summary>
        </member>
        <member name="T:GeoUtility.ErrorProvider.ErrorMessage">
            <summary><para>Die interne Klasse holt eine lokalisierte Fehlermeldung, die durch eine ID spezifiziert wird, 
            und stellt sie der GeoException-Klasse zur Verfügung.</para></summary>
        </member>
        <member name="M:GeoUtility.ErrorProvider.ErrorMessage.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.ErrorProvider.ErrorMessage.#ctor(System.String)">
            <summary><para>Konstruktor mit Parameter für die Fehler-ID.</para></summary>
            <param name="id">Eine globale Fehler-ID.</param>
        </member>
        <member name="P:GeoUtility.ErrorProvider.ErrorMessage.ID">
            <summary><para>Die Eigenschaft legt die Fehler-ID fest, sofern sie nicht bei der Erzeugung der Klasse übergeben wurde.</para></summary>
        </member>
        <member name="P:GeoUtility.ErrorProvider.ErrorMessage.Text">
            <summary><para>Die Eigenschaft Text gibt die lokalisierte Fehlermeldung zurück, welche durch die ID-Eigenschaft definiert ist.</para></summary>
        </member>
        <member name="T:GeoUtility.ErrorProvider.GeoException">
            <summary><para>Die interne Klasse stellt der Bibliothek lokalisierte Fehlermeldungen zur Verfügung, 
            entsprechnend der Spracheinstellungen des Benutzer-Betriebssystems.</para></summary>
        </member>
        <member name="M:GeoUtility.ErrorProvider.GeoException.#ctor">
            <summary><para>Der Standard-Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.ErrorProvider.GeoException.#ctor(GeoUtility.ErrorProvider.ErrorMessage)">
            <summary><para>Überladener Konstruktor mit einem Parameter für die Fehler-Nachricht.</para></summary>
            <param name="message">Ein Fehlertext.</param>
        </member>
        <member name="M:GeoUtility.ErrorProvider.GeoException.#ctor(GeoUtility.ErrorProvider.ErrorMessage,System.Exception)">
            <summary><para>Überladener Konstruktor mit einem Parameter für die Fehler-Nachricht und eine innere Exception.</para></summary>
            <param name="message">Ein Fehlertext.</param>
            <param name="inner">Eine innere Ausnahme.</param>
        </member>
        <member name="T:GeoUtility.Conversion">
            <summary><para>Die öffentliche Klasse <see cref="T:GeoUtility.Conversion"/> bietet eine von mehreren Varianten zur 
            Transformierung von Koordinaten eines Systems in ein anderes.</para></summary>
            
            <remarks><para>Die Klasse verwendet für die Transformation generische Methoden. Sollten Sie nicht
            mit generischen Methoden vertraut sein, ist möglicherweise die Verwendung der Methoden 
            für die Typkonvertierung der Koordinatensystem-Klassen vorzuziehen.</para></remarks>
            
            <example>Dieses Beispiel zeigt die Verwendung der generischen Methode <see cref="M:GeoUtility.Conversion.Convert``2(``0)">Convert&lt;S, T&gt;</see>. 
            In dem Beispiel wird eine MGRS-Koordinate nach Längengrad-Breitengrad (<see cref="T:GeoUtility.GeoSystem.Geographic"/>) transformiert:
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS(32, "U", "MB", 78123, 29123);
            Geographic geo;
            GeoUtility.Conversion c = new GeoUtility.Conversion();
            geo = c.Convert&lt;MGRS, Geographic&gt;(mgrs);
            </code>
            </example>
        </member>
        <member name="M:GeoUtility.Conversion.#ctor">
            <summary><para>Der Standard- Konstruktor.</para></summary>
        </member>
        <member name="M:GeoUtility.Conversion.Convert``2(``0)">
            <summary><para>Generische Funktion konvertiert ein Objekt eines Quellsystems S in das Zielsystem T</para></summary>
            
            <example>Dieses Beispiel zeigt die Verwendung der generischen Methode <see cref="M:GeoUtility.Conversion.Convert``2(``0)">Convert&lt;S, T&gt;</see>. 
            In dem Beispiel wird ein <see cref="T:GeoUtility.GeoSystem.MGRS"/>-Objekt in ein <see cref="T:GeoUtility.GeoSystem.UTM"/>-Objekt transformiert:
            <code>
            using GeoUtility.GeoSystem;
            MGRS mgrs = new MGRS("32UMB7812329123");
            UTM utm;
            GeoUtility.Conversion c = new GeoUtility.Conversion();
            utm = c.Convert&lt;MGRS, UTM&gt;(mgrs);
            </code>
            </example>
            
            <typeparam name="S">Typ des Quellsystems.</typeparam>
            <typeparam name="T">Typ des Zielsystems.</typeparam>
            <param name="source">Zu konvertierendes Objekt</param>
            <returns>Ein Objekt des Zieltyps T</returns>
        </member>
    </members>
</doc>
